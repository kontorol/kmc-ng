!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@kaltura-ng/kaltura-ui"),require("primeng/primeng"),require("@angular/common"),require("@kaltura-ng/kaltura-common"),require("@angular/animations"),require("primeng/components/autocomplete/autocomplete"),require("primeng/components/utils/objectutils"),require("@angular/forms"),require("primeng/components/inputtext/inputtext"),require("primeng/components/button/button"),require("primeng/components/common/shared"),require("@angular/cdk/scrolling"),require("primeng/components/dom/domhandler"),require("primeng/table"),require("primeng/api"),require("rxjs/add/operator/delay"),require("rxjs/Observable"),require("rxjs/add/observable/fromEvent"),require("primeng/components/dropdown/dropdown")):"function"==typeof define&&define.amd?define("@kaltura-ng/kaltura-primeng-ui",["exports","@angular/core","@kaltura-ng/kaltura-ui","primeng/primeng","@angular/common","@kaltura-ng/kaltura-common","@angular/animations","primeng/components/autocomplete/autocomplete","primeng/components/utils/objectutils","@angular/forms","primeng/components/inputtext/inputtext","primeng/components/button/button","primeng/components/common/shared","@angular/cdk/scrolling","primeng/components/dom/domhandler","primeng/table","primeng/api","rxjs/add/operator/delay","rxjs/Observable","rxjs/add/observable/fromEvent","primeng/components/dropdown/dropdown"],t):t((e["kaltura-ng"]=e["kaltura-ng"]||{},e["kaltura-ng"]["kaltura-primeng-ui"]={}),e.ng.core,null,null,e.ng.common,null,e.ng.animations,null,null,e.ng.forms,null,null,null,e.ng.cdk.scrolling,null,null,null,e.rxjs["add/operator/delay"],e.rxjs.Observable,e.rxjs["add/observable/fromEvent"],null)}(this,function(e,l,n,t,o,i,s,r,a,u,p,d,c,h,g,m,f,b,y,v,w){"use strict";var I=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};function _(e,t){function n(){this.constructor=e}I(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function x(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,i,r=n.call(e),l=[];try{for(;(void 0===t||0<t--)&&!(o=r.next()).done;)l.push(o.value)}catch(s){i={error:s}}finally{try{o&&!o.done&&(n=r["return"])&&n.call(r)}finally{if(i)throw i.error}}return l}function C(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(x(arguments[t]));return e}var S=function(i){function e(e,t,n){var o=i.call(this,e,t,n)||this;return o._dataTableRef=e,o}return _(e,i),e.prototype._getStickyElement=function(e){var t=e.nativeElement.querySelectorAll(".ui-table-scrollable-header-box,.ui-datatable-scrollable-header-box");return t&&0<t.length?t[0]:(console.warn("failed to extract table header (did you set the prime table with header and set it to scrollable?)"),null)},e.prototype._onSticky=function(){this.updateHeaderSize()},e.prototype._onUnsetSticky=function(){this._stickyElement.style.position="static",this._stickyElement.style.width="auto"},e.prototype.onResize=function(){this.updateHeaderSize()},e.prototype.updateHeaderSize=function(){if(this.isSticky){var e=this._dataTableRef.nativeElement.getBoundingClientRect(),t=e.right-e.left;this._stickyElement.style.width=t+"px"}},e.decorators=[{type:l.Directive,args:[{selector:"[kStickyHeader]"}]}],e.ctorParameters=function(){return[{type:l.ElementRef},{type:l.Renderer},{type:n.StickyScrollService}]},e}(n.StickyDirective),k=function(){function e(){this._registered=!1,this._closeDropdownFunc=this.closeDropdown.bind(this),this._isDestroyed=!1}return e.prototype.ngAfterViewInit=function(){var t=this;this.dropdown.el.nativeElement.addEventListener("click",function(){t.handleScrollRegistration()}),this._dropdownChangesSubscription=this.dropdown.onChange.subscribe(function(e){t.handleScrollRegistration()})},e.prototype.handleScrollRegistration=function(){var e=this;this.scrollTarget&&this.dropdown&&setTimeout(function(){e._isDestroyed||(e.dropdown.overlayVisible&&!e._registered&&(e.scrollTarget.addEventListener("scroll",e._closeDropdownFunc),e._registered=!0),!e.dropdown.overlayVisible&&e._registered&&(e.scrollTarget.removeEventListener("scroll",e._closeDropdownFunc),e._registered=!1))},0)},e.prototype.ngOnDestroy=function(){this.scrollTarget&&this._registered&&this.scrollTarget.removeEventListener("scroll",this._closeDropdownFunc),this._dropdownChangesSubscription&&(this._dropdownChangesSubscription.unsubscribe(),this._dropdownChangesSubscription=null),this._isDestroyed=!0},e.prototype.closeDropdown=function(){this.dropdown&&"undefined"!=typeof this.dropdown.hide&&(this.dropdown.hide(),this.scrollTarget.removeEventListener("scroll",this._closeDropdownFunc),this._registered=!1)},e.decorators=[{type:l.Directive,args:[{selector:"[kDropdownCloseOnScroll]"}]}],e.ctorParameters=function(){return[]},e.propDecorators={scrollTarget:[{type:l.Input}],dropdown:[{type:l.ContentChild,args:[t.Dropdown]}]},e}(),M=function(){function e(e,t){this._menu=e||t}return e.prototype.onWindowScroll=function(){this.closeMenu()},e.prototype.closeMenu=function(){this._menu&&"undefined"!=typeof this._menu.hide&&this._menu.hide()},e.decorators=[{type:l.Directive,args:[{selector:"[kMenuCloseOnScroll]"}]}],e.ctorParameters=function(){return[{type:t.Menu,decorators:[{type:l.Optional}]},{type:t.TieredMenu,decorators:[{type:l.Optional}]}]},e.propDecorators={onWindowScroll:[{type:l.HostListener,args:["window:scroll",[]]}]},e}(),O=function(){function e(){}return e.decorators=[{type:l.NgModule,args:[{imports:[o.CommonModule,t.InputTextModule,t.MenuModule,i.KalturaCommonModule],declarations:[S,k,M],exports:[S,k,M],providers:[]}]}],e}(),D={provide:u.NG_VALUE_ACCESSOR,useExisting:l.forwardRef(function(){return E}),multi:!0},E=function(r){function e(e,t,n,o){var i=r.call(this,e,t,n,o)||this;return i.el=e,i.renderer=t,i.cd=n,i.differs=o,i._suggestionsProvider$=null,i._loading=!1,i._showNoItems=!1,i._errorMessage="",i._allowMultiple=!1,i._placeholder="",i.ObjectUtils=a.ObjectUtils,i.overlayHovered=!1,i.limitToSuggestions=!0,i.suggestionSelectableField="",i.suggestionItemField="",i.tooltipResolver=null,i.classField=null,i.suggestionLabelField="",i.addOnPaste=!0,i.itemClick=new l.EventEmitter,i}return _(e,r),Object.defineProperty(e.prototype,"multiple",{get:function(){return!0},set:function(e){this._allowMultiple=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"suggestions",{get:function(){return this._suggestions},set:function(e){this._suggestions=e,this.panelEL&&this.panelEL.nativeElement&&this._suggestions&&this._suggestions.length&&(this.show(),this.suggestionsUpdated=!0,this.autoHighlight&&(this.highlightOption=this._suggestions[0]))},enumerable:!0,configurable:!0}),e.prototype.onPaste=function(e){var t=this;if(this.addOnPaste){var n=e.clipboardData.getData("text/plain");n&&-1!==n.indexOf(",")&&(e.preventDefault(),n.split(",").map(function(e){return e.trim()}).forEach(function(e){return t._addValueFromInput(e)}),this.overlayVisible||this._clearInputValue(),this.onModelTouched())}},Object.defineProperty(e.prototype,"placeholder",{get:function(){return this._placeholder},set:function(e){var t=n.KalturaBrowserUtils.detectBrowser()===n.BrowserNames.IE11;this._placeholder=t&&!this._allowMultiple?"":e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"suggestionsProvider",{set:function(e){var t=this;this._suggestionsProvider$&&(this._suggestionsProvider$.unsubscribe(),this._suggestionsProvider$=null),e&&(this._suggestionsProvider$=e.subscribe(function(e){t.input&&(t.input.value||"").trim().length>=t.minLength&&(e.isLoading?(t._loading=!0,t._showNoItems=!1,t.suggestions=[],t._errorMessage="",t.suggestionsUpdated=!0,t.show()):e.suggestions&&e.suggestions.length?(t._loading=!1,t.suggestions=e.suggestions):(t.suggestions=[],(t._loading=!0)&&(t._showNoItems=!e.errorMessage,t._loading=!1,t.suggestionsUpdated=!0,t.show()),e.errorMessage&&(t._errorMessage=e.errorMessage,t.suggestionsUpdated=!0,t.show())))}))},enumerable:!0,configurable:!0}),e.prototype.getValue=function(){return this._allowMultiple?this.value instanceof Array?this.value:this.value?[this.value]:[]:this.value instanceof Array?0<this.value.length?this.value[0]:null:this.value},e.prototype.clearValue=function(){this.value=null,this._clearInputValue()},Object.defineProperty(e.prototype,"searchText",{get:function(){return this.input?this.input.value:null},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"input",{get:function(){return this.multiInputEL.nativeElement},enumerable:!0,configurable:!0}),e.prototype._isItemSelected=function(e){return this.multiple?this.value&&this.value instanceof Array&&-1!==this.value.indexOf(e):this.value&&this.value===e},e.prototype._addValueFromInput=function(e){void 0===e&&(e=null);var t=(e||this.searchText||"").trim();if(this.value&&this.value.some(function(e){return"string"==typeof e&&e.toLowerCase()===t.toLowerCase()}))return{status:"duplicated"};if(this.limitToSuggestions||!t||this.highlightOption||this.overlayHovered||!this.focus)return{status:"not relevant"};if(1<=t.length&&!this._isItemSelected(t)){var n=this.onItemAdding?this.onItemAdding.call(null,t):t;return n?("string"==typeof n&&this.field&&console.warn("The auto-complete component 'field' attribute is set to value '"+this.field+"' which indicates that the auto-complete value type is an object (did you forget to assign the 'onItemAdding' attribute to convert the user input which is of type type 'string' to a valid value?)"),r.prototype.selectItem.call(this,n)):null==n&&console.warn("the function provided by attribute 'onItemAdding' resulted with null value, abort adding user input to aut-complete value"),this.hide(),{status:"added"}}return{status:"invalid"}},e.prototype.onInputBlur=function(e){this._addValueFromInput(),this.overlayVisible||this._clearInputValue(),r.prototype.onInputBlur.call(this,e)},e.prototype.hide=function(){this.overlayVisible&&(this.panelEL.nativeElement.scrollTop=0,this.highlightOption=null,this._loading=!1,this._showNoItems=!1,this._errorMessage=null),this.focus||this._clearInputValue(),r.prototype.hide.call(this)},e.prototype._clearInputValue=function(){this.input&&this.input.value&&(this.input.value="")},e.prototype.onInput=function(e){this._allowMultiple||(this.value=null),this.input.value.length<this.minLength&&this.hide(),r.prototype.onInput.call(this,e)},e.prototype.onKeydown=function(e){var t=!1;if(9===e.which||13===e.which||","===e.key){var n=this._addValueFromInput().status;"not relevant"!==n&&(t=!0,"duplicated"===n&&(this.overlayVisible&&this.hide(),this._clearInputValue()))}if(!t&&this.overlayVisible)switch(e.which){case 9:this.hide();break;case 13:!(!this.highlightOption||!this.suggestionSelectableField)&&(typeof this.highlightOption[this.suggestionSelectableField]!==undefined&&!this.highlightOption[this.suggestionSelectableField])&&(t=!0)}t?(e.preventDefault(),e.stopPropagation()):r.prototype.onKeydown.call(this,e)},e.prototype.ngOnDestroy=function(){this._suggestionsProvider$&&(this._suggestionsProvider$.unsubscribe(),this._suggestionsProvider$=null)},e.prototype.onUserSelectItem=function(e,t){if(!this._canSelectSuggestion(t))return e.stopPropagation(),e.preventDefault(),void this.input.focus();this.selectItem(t)},e.prototype._getSuggestionText=function(e){var t=e;return e&&(this.suggestionLabelField?t=e[this.suggestionLabelField]:this.suggestionItemField&&this.field?t=(t=e[this.suggestionItemField])?t[this.field]:"":this.suggestionItemField?t=e[this.suggestionItemField]:this.field&&(t=e[this.field])),t},e.prototype._canSelectSuggestion=function(e){return!(this.suggestionSelectableField&&typeof e[this.suggestionSelectableField]!==undefined&&!e[this.suggestionSelectableField])},e.prototype.selectItem=function(e){if(this.highlightOption=null,this._canSelectSuggestion(e)){var t=e;this.suggestionItemField&&(t=e[this.suggestionItemField]),null==t?console.warn("[kaltura] -> trying to select a value that is either null or undefined. action ignored"):r.prototype.selectItem.call(this,t)}},e.prototype.focusInput=function(){var e=this;setTimeout(function(){e.input&&e.input.focus&&!e.input.disabled&&e.input.focus()},0)},e.prototype.onItemClick=function(e){this.itemClick.emit(e)},e.decorators=[{type:l.Component,args:[{selector:"kAutoComplete",styles:[":host /deep/ .ui-autocomplete-token-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-size:14px}@media screen and (max-width:991px){:host /deep/ .ui-autocomplete-token-label{max-width:270px}}@media screen and (min-width:992px){:host /deep/ .ui-autocomplete-token-label{max-width:270px}}@media screen and (min-width:1280px){:host /deep/ .ui-autocomplete-token-label{max-width:500px}}@media screen and (min-width:1600px){:host /deep/ .ui-autocomplete-token-label{max-width:800px}}:host /deep/ .kHighlightedText{text-decoration:underline}"],template:'<span [ngClass]="{\'ui-autocomplete ui-widget kOverrideFAIcons\':true,\'ui-autocomplete-dd\':dropdown,\'ui-autocomplete-multiple\':multiple}"\n      [ngStyle]="style" [class]="styleClass">\n            <input *ngIf="!multiple" #in [attr.type]="type" [attr.id]="inputId" [ngStyle]="inputStyle"\n                   [class]="inputStyleClass" autocomplete="off" [attr.required]="required"\n                   [ngClass]="\'ui-inputtext ui-widget ui-state-default ui-corner-all ui-autocomplete-input\'"\n                   [value]="inputFieldValue ? (field ? ObjectUtils.resolveFieldData(inputFieldValue, field) || inputFieldValue : value) : null"\n                   (click)="onInputClick($event)" (input)="onInput($event)" (keydown)="onKeydown($event)"\n                   (keyup)="onKeyup($event)" (focus)="onInputFocus($event)" (blur)="onInputBlur($event)"\n                   (change)="onInputChange($event)"\n                   [attr.placeholder]="_placeholder" [attr.size]="size" [attr.maxlength]="maxlength"\n                   [attr.tabindex]="tabindex" [readonly]="readonly" [disabled]="disabled"\n            ><ul *ngIf="multiple" #multiContainer\n                 class="ui-autocomplete-multiple-container ui-widget ui-inputtext ui-state-default ui-corner-all"\n                 [ngClass]="{\'ui-state-disabled\':disabled,\'ui-state-focus\':focus}" (click)="multiIn.focus()">\n                <li #token *ngFor="let val of value" [class]="\'ui-autocomplete-token ui-state-highlight ui-corner-all \' + (classField && val ? val[classField] : \'\')"\n                    [kTooltip]="val" [tooltipResolver]="tooltipResolver">\n                    <span class="ui-autocomplete-token-icon pi pi-fw pi-times" (click)="removeItem(token)"\n                          *ngIf="!disabled"></span>\n                    <span *ngIf="!selectedItemTemplate" class="ui-autocomplete-token-label" (click)="onItemClick(val)">{{field ? ObjectUtils.resolveFieldData(val, field): val}}</span>\n                    <ng-container *ngTemplateOutlet="selectedItemTemplate; context: {$implicit: val}"></ng-container>\n                </li>\n                <li class="ui-autocomplete-input-token">\n                    <input #multiIn [attr.type]="type" [attr.id]="inputId" [disabled]="disabled"\n                           [attr.placeholder]="(value&&value.length ? null : _placeholder)" [attr.tabindex]="tabindex"\n                           (input)="onInput($event)" (click)="onInputClick($event)"\n                           (keydown)="onKeydown($event)" [readonly]="readonly" (keyup)="onKeyup($event)"\n                           (focus)="onInputFocus($event)" (blur)="onInputBlur($event)" (change)="onInputChange($event)"\n                           autocomplete="off" [ngStyle]="inputStyle" [class]="inputStyleClass">\n                </li>\n            </ul\n            ><i *ngIf="loading" class="ui-autocomplete-loader pi pi-spinner pi-spin"></i><button #ddBtn type="button"\n                                                                                                 pButton\n                                                                                                 icon="pi pi-fw pi-caret-down"\n                                                                                                 class="ui-autocomplete-dropdown"\n                                                                                                 [disabled]="disabled"\n                                                                                                 (click)="handleDropdownClick($event)"\n                                                                                                 *ngIf="dropdown"></button>\n            <div #panel class="ui-autocomplete-panel ui-widget-content ui-corner-all ui-shadow"\n                 [style.display]="overlayVisible ? \'block\' : \'none\'" [style.width]="appendTo ? \'auto\' : \'100%\'"\n                 [style.max-height]="scrollHeight" [@overlayAnimation]="\'visible\'" (@overlayAnimation.start)="onOverlayAnimationStart($event)" (@overlayAnimation.done)="onOverlayAnimationDone($event)"\n                 (mouseenter)="overlayHovered=true" (mouseleave)="overlayHovered=false">\n                <ul\n                  class="ui-autocomplete-items ui-autocomplete-list ui-widget-content ui-widget ui-corner-all ui-helper-reset"\n                  *ngIf="overlayVisible">\n                <li *ngIf="_loading" class="ui-autocomplete-notification-item">\n                Searching...\n            </li>\n            <li *ngIf="_showNoItems" class="ui-autocomplete-notification-item">\n                No Items Found...\n            </li>\n            <li *ngIf="_errorMessage" class="ui-autocomplete-notification-item">\n                {{ _errorMessage }}\n            </li>\n                    <li *ngFor="let option of suggestions; let idx = index"\n                        [ngClass]="{\'ui-autocomplete-list-item ui-corner-all\':true,\'ui-state-highlight\':(highlightOption==option)}"\n                    [class.kIsItemDisabled]="option | kIsSuggestionDisabled : suggestionSelectableField"\n                        (mouseenter)="highlightOption=option" (mouseleave)="highlightOption=null"\n                        (click)="selectItem(option)">\n                        <span *ngIf="!itemTemplate"\n                              [innerHTML]="_getSuggestionText(option) | kHighlight : searchText"></span>\n                        <ng-container\n                          *ngTemplateOutlet="itemTemplate; context: {$implicit: option, index: idx}"></ng-container>\n                    </li>\n                    <li *ngIf="noResults && emptyMessage" class="ui-autocomplete-list-item ui-corner-all">{{emptyMessage}}</li>\n                </ul>\n            </div>\n        </span>\n',providers:[D],animations:[s.trigger("overlayAnimation",[s.state("void",s.style({transform:"translateY(5%)",opacity:0})),s.state("visible",s.style({transform:"translateY(0)",opacity:1})),s.transition("void => visible",s.animate("225ms ease-out")),s.transition("visible => void",s.animate("195ms ease-in"))])],host:{"[class.ui-inputwrapper-filled]":"filled","[class.ui-inputwrapper-focus]":"focus"}}]}],e.ctorParameters=function(){return[{type:l.ElementRef},{type:l.Renderer2},{type:l.ChangeDetectorRef},{type:l.IterableDiffers}]},e.propDecorators={onItemAdding:[{type:l.Input}],limitToSuggestions:[{type:l.Input}],suggestionSelectableField:[{type:l.Input}],suggestionItemField:[{type:l.Input}],tooltipResolver:[{type:l.Input}],classField:[{type:l.Input}],suggestionLabelField:[{type:l.Input}],addOnPaste:[{type:l.Input}],suggestions:[{type:l.Input}],itemClick:[{type:l.Output}],panelEL:[{type:l.ViewChild,args:["panel"]}],onPaste:[{type:l.HostListener,args:["paste",["$event"]]}],placeholder:[{type:l.Input}],multiple:[{type:l.Input}],suggestionsProvider:[{type:l.Input}]},e}(r.AutoComplete),T=function(){function e(){}return e.prototype.transform=function(e,t){if(!t.trim())return e;try{var n=new RegExp("("+t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")+")","i");return e.replace(n,'<span class="kHighlightedText">$1</span>')}catch(o){return e}},e.decorators=[{type:l.Pipe,args:[{name:"kHighlight"}]}],e}(),A=function(){function e(){}return e.prototype.transform=function(e,t){return t&&"boolean"==typeof e[t]&&!1===e[t]},e.decorators=[{type:l.Pipe,args:[{name:"kIsSuggestionDisabled"}]}],e}(),F=function(){function e(){}return e.decorators=[{type:l.NgModule,args:[{imports:[o.CommonModule,p.InputTextModule,d.ButtonModule,c.SharedModule,n.TooltipModule],declarations:[E,T,A],exports:[E,T]}]}],e}(),$={provide:u.NG_VALUE_ACCESSOR,useExisting:l.forwardRef(function(){return P}),multi:!0},P=function(){function e(){this.onChange=new l.EventEmitter,this.onFocus=new l.EventEmitter,this.onBlur=new l.EventEmitter,this.onEnterKeyup=new l.EventEmitter,this.onClear=new l.EventEmitter,this._disabled=!1,this._value="",this._showClearBtn=!1,this.onModelChange=function(){},this.onModelTouched=function(){}}return e.prototype._clearInput=function(){this._value="",this._showClearBtn=!1,this.onModelChange(this._value),this.onChange.emit(this._value),this.onClear.emit()},e.prototype.setDisabledState=function(e){this._disabled=e},e.prototype.registerOnChange=function(e){this.onModelChange=e},e.prototype.registerOnTouched=function(e){this.onModelTouched=e},e.prototype.writeValue=function(e){this._value=String(e||""),this._value.trim()||(this._showClearBtn=!1)},e.prototype.clearValue=function(){this._value="",this._showClearBtn=!1,this.onModelChange(this._value),this.onChange.emit(this._value)},e.prototype._enterPressed=function(){this.onEnterKeyup.emit(this._value),this._showClearBtn=!!this._value},e.decorators=[{type:l.Component,args:[{selector:"kClearableInput",template:'<span class="k-clearable-input-wrapper">\n    <input pInputText\n           class="k-clearable-input-input"\n           [disabled]="disabled || _disabled"\n           [placeholder]="placeholder"\n           (change)="onChange.emit($event)"\n           (focus)="onFocus.emit($event)"\n           (blur)="onBlur.emit($event)"\n           (keyup.enter)="_enterPressed()"\n           [(ngModel)]="_value">\n    <i *ngIf="_showClearBtn" class="k-clearable-input-clear-btn" title="Clear" (click)="_clearInput()">&times;</i>\n</span>',styles:[".k-clearable-input-wrapper{position:relative}.k-clearable-input-wrapper .k-clearable-input-clear-btn{cursor:pointer;position:absolute;right:5px;top:-6px;font-weight:700;font-size:1.2em;color:#999;font-style:normal}"],providers:[t.DomHandler,$]}]}],e.propDecorators={disabled:[{type:l.Input}],placeholder:[{type:l.Input}],onChange:[{type:l.Output}],onFocus:[{type:l.Output}],onBlur:[{type:l.Output}],onEnterKeyup:[{type:l.Output}],onClear:[{type:l.Output}]},e}(),V=function(){function e(){}return e.decorators=[{type:l.NgModule,args:[{imports:[o.CommonModule,c.SharedModule,t.InputTextModule,u.FormsModule],declarations:[P],exports:[P]}]}],e}(),L=function(){function e(){this.errorMsg=""}return Object.defineProperty(e.prototype,"isValid",{get:function(){return this.form.controls[this.control.key].valid},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.isValid?this.errorMsg="":this.errorMsg=this.getErrorMsg(),this.onFormStatusChanges()},e.prototype.asDatePickerControl=function(e){return e instanceof n.DatePickerControl?e:null},e.prototype.asDynamicDropdownControl=function(e){return e instanceof n.DynamicDropdownControl?e:null},e.prototype.asListControl=function(e){return e instanceof n.ListControl?e:null},e.prototype.onFormStatusChanges=function(){var e=this;this.form.statusChanges.pipe(i.cancelOnDestroy(this)).subscribe(function(){e.isValid?e.errorMsg="":e.errorMsg=e.getErrorMsg()})},e.prototype.getErrorMsg=function(){var e="",t=this.form.controls[this.control.key];if(this.control.errors&&!t.valid){var n=Object.keys(this.control.errors).find(function(e){return t.hasError(e)});n&&(e=this.control.errors[n])}return e},e.prototype.ngOnDestroy=function(){},e.decorators=[{type:l.Component,args:[{selector:"k-prime-control",template:'<div [formGroup]="form" [ngSwitch]="control.controlType">\n    <textarea  *ngSwitchCase="\'TextArea\'" [formControlName]="control.key"   [class.hasError]="errorMsg && form.controls[control.key].touched" pInputTextarea ></textarea>\n\n    <input *ngSwitchCase="\'Textbox\'" [formControlName]="control.key"  [class.hasError]="errorMsg && form.controls[control.key].touched" pInputText/>\n\n    <input *ngSwitchCase="\'Number\'"  type="number" [formControlName]="control.key"  [class.hasError]="errorMsg && form.controls[control.key].touched" pInputText />\n\n    <p-dropdown *ngSwitchCase="\'Dropdown\'" [filter]="true" [formControlName]="control.key"  [options]="asDynamicDropdownControl(control).values | kPrimeListOptions: true"></p-dropdown>\n\n    <kMultiSelect *ngSwitchCase="\'List\'" [resetFilterOnHide]="true" [formControlName]="control.key"  [options]="asListControl(control).values | kPrimeListOptions : false"></kMultiSelect>\n\n    <p-calendar *ngSwitchCase="\'DatePicker\'" [formControlName]="control.key"   icon="kIconcalendar" [showIcon]="true" [monthNavigator]="true" [yearNavigator]="true" [showTime]="asDatePickerControl(control).showTime" yearRange="2005:2050" [dateFormat]="asDatePickerControl(control).dateFormat"></p-calendar>\n\n    <p-inputSwitch  *ngSwitchCase="\'Switch\'" [formControlName]="control.key"> </p-inputSwitch>\n\n    <span *ngSwitchDefault="">Missing control for {{control.controlType}}</span>\n\n    <p *ngIf="errorMsg && form.controls[control.key].touched"\n       class="kFormError">{{errorMsg}}\n    </p>\n</div>\n',styles:[""]}]}],e.propDecorators={control:[{type:l.Input}],form:[{type:l.Input}]},e}(),B=function(){function e(){}return e.prototype.transform=function(e,t){var n=(e||[]).map(function(e){return{label:e.text,value:e.value}});return t&&n.unshift({label:"Select a value",value:null}),n},e.decorators=[{type:l.Pipe,args:[{name:"kPrimeListOptions"}]}],e.ctorParameters=function(){return[]},e}(),H={provide:u.NG_VALUE_ACCESSOR,useExisting:l.forwardRef(function(){return R}),multi:!0},R=function(i){function e(e,t,n){var o=i.call(this,e,t,n)||this;return o.el=e,o.renderer=t,o._cd=n,o.selectAllLabel="Select All",o.menuItemDisplayStyle="block",o}return _(e,i),e.prototype.ngOnDestroy=function(){i.prototype.ngOnDestroy.call(this),this._removeHideOnScrollHandler()},e.prototype._addHideOnScrollHandler=function(){var e=this;if(this.hideOnScroll){var t="string"==typeof this.hideOnScroll?document.querySelector(this.hideOnScroll):this.hideOnScroll;t instanceof Element&&(this._hideOnScrollListener=this.renderer.listen(t,"scroll",function(){return e.hide()}))}},e.prototype._removeHideOnScrollHandler=function(){this.hideOnScroll&&this._hideOnScrollListener&&this._hideOnScrollListener()},e.prototype.show=function(){i.prototype.show.call(this),this._addHideOnScrollHandler()},e.prototype.hide=function(){i.prototype.hide.call(this),this._removeHideOnScrollHandler()},e.prototype.isPartiallyChecked=function(){return!this.isAllChecked()&&0<(this.value||[]).length},e.decorators=[{type:l.Component,args:[{selector:"kMultiSelect",styles:[":host /deep/ .ui-multiselect-panel .pi-minus{background-color:#00a784;border:1px solid #00a784;color:#fff;width:16px;height:16px;border-radius:3px;top:-1px;position:relative;left:-1px}"],template:'<div #container [ngClass]="{\'ui-multiselect ui-widget ui-state-default ui-corner-all\':true,\'ui-multiselect-open\':overlayVisible,\'ui-state-focus\':focus,\'ui-state-disabled\': disabled}" [ngStyle]="style" [class]="styleClass"\n     (click)="onMouseclick($event,in)">\n  <div class="ui-helper-hidden-accessible">\n    <input #in type="text" readonly="readonly" [attr.id]="inputId" [attr.name]="name" (focus)="onInputFocus($event)" (blur)="onInputBlur($event)"\n           [disabled]="disabled" [attr.tabindex]="tabindex" (keydown)="onKeydown($event)">\n  </div>\n  <div class="ui-multiselect-label-container" [title]="valuesAsString">\n    <label class="ui-multiselect-label ui-corner-all">\n      <ng-container *ngIf="!selectedItemsTemplate">{{isAllChecked() ? (allSelectedLabel || valuesAsString) : valuesAsString}}</ng-container>\n      <ng-container *ngTemplateOutlet="selectedItemsTemplate; context: {$implicit: value}"></ng-container>\n    </label>\n  </div>\n  <div [ngClass]="{\'ui-multiselect-trigger ui-state-default ui-corner-right\':true}">\n    <span class="ui-multiselect-trigger-icon ui-clickable" [ngClass]="dropdownIcon"></span>\n  </div>\n  <div *ngIf="overlayVisible" [ngClass]="[\'ui-multiselect-panel ui-widget ui-widget-content ui-corner-all ui-shadow\']" [@overlayAnimation]="{value: \'visible\', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}" (@overlayAnimation.start)="onOverlayAnimationStart($event)"\n       [ngStyle]="panelStyle" [class]="panelStyleClass" (click)="panelClick=true">\n    <div class="ui-widget-header ui-corner-all ui-multiselect-header ui-helper-clearfix" [ngClass]="{\'ui-multiselect-header-no-toggleall\': !showToggleAll}" *ngIf="showHeader">\n      <div class="ui-chkbox ui-widget" *ngIf="showToggleAll && !selectionLimit">\n        <div class="ui-helper-hidden-accessible">\n          <input type="checkbox" readonly="readonly" [checked]="isAllChecked()" (focus)="onHeaderCheckboxFocus()" (blur)="onHeaderCheckboxBlur()" (keydown.space)="toggleAll($event)">\n        </div>\n        <div class="ui-chkbox-box ui-widget ui-corner-all ui-state-default" [ngClass]="{\'ui-state-active\':isAllChecked(), \'ui-state-focus\': headerCheckboxFocus}" (click)="toggleAll($event)">\n          <span class="ui-chkbox-icon ui-clickable pi"\n                [ngClass]="{\'pi-check\':isAllChecked(), \'pi-minus\':isPartiallyChecked()}"></span>\n        </div>\n      </div>\n      <div class="ui-multiselect-filter-container" *ngIf="filter">\n        <input #filterInput type="text" role="textbox" [value]="filterValue||\'\'" (input)="onFilter()" class="ui-inputtext ui-widget ui-state-default ui-corner-all" [attr.placeholder]="filterPlaceHolder">\n        <span class="ui-multiselect-filter-icon pi pi-search"></span>\n      </div>\n      <a class="ui-multiselect-close ui-corner-all" tabindex="0" (click)="close($event)" (keydown.enter)="close($event)">\n        <span class="pi pi-times"></span>\n      </a>\n      <ng-content select="p-header"></ng-content>\n    </div>\n    <div class="ui-multiselect-items-wrapper" [style.max-height]="virtualScroll ? \'auto\' : (scrollHeight||\'auto\')">\n      <ul class="ui-multiselect-items ui-multiselect-list ui-widget-content ui-widget ui-corner-all ui-helper-reset">\n        <ng-container *ngIf="!virtualScroll; else virtualScrollList">\n          <ng-template ngFor let-option let-i="index" [ngForOf]="options">\n            <p-multiSelectItem [option]="option" [selected]="isSelected(option.value)" (onClick)="onOptionClick($event)" (onKeydown)="onOptionKeydown($event)"\n                               [maxSelectionLimitReached]="maxSelectionLimitReached" [visible]="isItemVisible(option)" [template]="itemTemplate"></p-multiSelectItem>\n          </ng-template>\n        </ng-container>\n        <ng-template #virtualScrollList>\n          <cdk-virtual-scroll-viewport #viewport [ngStyle]="{\'height\': scrollHeight}" [itemSize]="itemSize" *ngIf="virtualScroll">\n            <ng-container *cdkVirtualFor="let option of options; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd">\n              <p-multiSelectItem [option]="option" [selected]="isSelected(option.value)" (onClick)="onOptionClick($event)" (onKeydown)="onOptionKeydown($event)"\n                                 [maxSelectionLimitReached]="maxSelectionLimitReached" [visible]="isItemVisible(option)" [template]="itemTemplate" [itemSize]="itemSize"></p-multiSelectItem>\n            </ng-container>\n          </cdk-virtual-scroll-viewport>\n        </ng-template>\n      </ul>\n    </div>\n    <div class="ui-multiselect-footer ui-widget-content" *ngIf="footerFacet">\n      <ng-content select="p-footer"></ng-content>\n    </div>\n  </div>\n</div>\n',animations:[s.trigger("overlayAnimation",[s.state("void",s.style({transform:"translateY(5%)",opacity:0})),s.state("visible",s.style({transform:"translateY(0)",opacity:1})),s.transition("void => visible",s.animate("{{showTransitionParams}}")),s.transition("visible => void",s.animate("{{hideTransitionParams}}"))])],host:{"[class.ui-inputwrapper-filled]":"filled","[class.ui-inputwrapper-focus]":"focus"},providers:[H]}]}],e.ctorParameters=function(){return[{type:l.ElementRef},{type:l.Renderer2},{type:l.ChangeDetectorRef}]},e.propDecorators={disabledLabel:[{type:l.Input}],allSelectedLabel:[{type:l.Input}],selectAllLabel:[{type:l.Input}],menuItemDisplayStyle:[{type:l.Input}],hideOnScroll:[{type:l.Input}]},e}(t.MultiSelect),K=function(){function e(){this.onClick=new l.EventEmitter,this.onKeydown=new l.EventEmitter}return e.prototype.onOptionClick=function(e){this.onClick.emit({originalEvent:e,option:this.option})},e.prototype.onOptionKeydown=function(e){this.onKeydown.emit({originalEvent:e,option:this.option})},e.decorators=[{type:l.Component,args:[{selector:"p-multiSelectItem",template:'\n    <li class="ui-multiselect-item ui-corner-all" (click)="onOptionClick($event)" (keydown)="onOptionKeydown($event)"\n        [style.display]="visible ? \'block\' : \'none\'" [attr.tabindex]="option.disabled ? null : \'0\'" [ngStyle]="{\'height\': itemSize + \'px\'}"\n        [ngClass]="{\'ui-state-highlight\': selected, \'ui-state-disabled\': (option.disabled || (maxSelectionLimitReached && !selected))}">\n      <div class="ui-chkbox ui-widget">\n        <div class="ui-chkbox-box ui-widget ui-corner-all ui-state-default"\n             [ngClass]="{\'ui-state-active\': selected}">\n          <span class="ui-chkbox-icon ui-clickable" [ngClass]="{\'pi pi-check\': selected}"></span>\n        </div>\n      </div>\n      <label *ngIf="!template">{{option.label}}</label>\n      <ng-container *ngTemplateOutlet="template; context: {$implicit: option}"></ng-container>\n    </li>\n  '}]}],e.propDecorators={option:[{type:l.Input}],selected:[{type:l.Input}],disabled:[{type:l.Input}],visible:[{type:l.Input}],itemSize:[{type:l.Input}],template:[{type:l.Input}],maxSelectionLimitReached:[{type:l.Input}],onClick:[{type:l.Output}],onKeydown:[{type:l.Output}]},e}(),N=function(){function e(){}return e.decorators=[{type:l.NgModule,args:[{imports:[t.MultiSelectModule,o.CommonModule,c.SharedModule,n.TooltipModule,h.ScrollingModule],declarations:[R,K],exports:[R]}]}],e}(),U=function(){function e(){}return e.decorators=[{type:l.NgModule,args:[{imports:[u.ReactiveFormsModule,o.CommonModule,t.DropdownModule,N,t.InputTextModule,t.InputTextareaModule,t.CalendarModule,t.InputSwitchModule],declarations:[L,B],exports:[L]}]}],e}(),j={provide:u.NG_VALUE_ACCESSOR,useExisting:l.forwardRef(function(){return q}),multi:!0},q=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.tooltip=!0,e}return _(e,t),e.decorators=[{type:l.Component,args:[{selector:"kSlider",styles:[":host /deep/ .ui-slider{background-color:#ccc;height:6px;border:none}:host /deep/ .ui-slider .ui-slider-range{background:#00a784;border:2px solid #00a784}:host /deep/ .ui-slider .ui-slider-handle{top:-.3em;margin-left:-.6em;border-radius:50%;border:2px solid #00a784;height:16px;width:16px;box-shadow:0 2px 8px 0 rgba(0,0,0,.24)}"],template:'<div [ngStyle]="style" [class]="styleClass"\n     [ngClass]="{\n         \'ui-slider ui-widget ui-widget-content ui-corner-all\':true,\n         \'ui-state-disabled\':disabled,\n         \'ui-slider-horizontal\':orientation == \'horizontal\',\n         \'ui-slider-vertical\':orientation == \'vertical\',\n         \'ui-slider-animate\':animate\n     }"\n     (click)="onBarClick($event)">\n\n    <span *ngIf="range && orientation == \'horizontal\'"\n          class="ui-slider-range ui-widget-header ui-corner-all"\n          [ngStyle]="{\'left\':handleValues[0] + \'%\',width: (handleValues[1] - handleValues[0] + \'%\')}"></span>\n\n    <span *ngIf="range && orientation == \'vertical\'"\n          class="ui-slider-range ui-widget-header ui-corner-all"\n          [ngStyle]="{\'bottom\':handleValues[0] + \'%\',height: (handleValues[1] - handleValues[0] + \'%\')}"></span>\n\n    <span *ngIf="!range && orientation==\'vertical\'"\n          class="ui-slider-range ui-slider-range-min ui-widget-header ui-corner-all"\n          [ngStyle]="{\'height\': handleValue + \'%\'}"></span>\n\n    <span *ngIf="!range && orientation==\'horizontal\'"\n          class="ui-slider-range ui-slider-range-min ui-widget-header ui-corner-all"\n          [ngStyle]="{\'width\': handleValue + \'%\'}"></span>\n\n    <span *ngIf="!range"\n          class="ui-slider-handle ui-state-default ui-corner-all ui-clickable"\n          (mousedown)="onMouseDown($event)"\n          (touchstart)="onTouchStart($event)"\n          (touchmove)="onTouchMove($event)"\n          (touchend)="dragging=false"\n          [style.transition]="dragging ? \'none\': null"\n          [ngStyle]="{\n            \'left\': orientation == \'horizontal\' ? handleValue + \'%\' : null,\n            \'bottom\': orientation == \'vertical\' ? handleValue + \'%\' : null\n          }"\n          [kTooltip]="tooltip ? value : \'\'"\n          [followTarget]="true"></span>\n\n    <span *ngIf="range"\n          (mousedown)="onMouseDown($event,0)"\n          (touchstart)="onTouchStart($event,0)"\n          (touchmove)="onTouchMove($event,0)"\n          (touchend)="dragging=false"\n          [style.transition]="dragging ? \'none\': null"\n          class="ui-slider-handle ui-state-default ui-corner-all ui-clickable"\n          [ngStyle]="{\'left\': rangeStartLeft, \'bottom\': rangeStartBottom}"\n          [ngClass]="{\'ui-slider-handle-active\':handleIndex==0}"\n          [kTooltip]="tooltip ? values[handleIndex] : \'\'"\n          [followTarget]="true"></span>\n\n    <span *ngIf="range"\n          (mousedown)="onMouseDown($event,1)"\n          (touchstart)="onTouchStart($event,1)"\n          (touchmove)="onTouchMove($event,1)"\n          (touchend)="dragging=false"\n          [style.transition]="dragging ? \'none\': null"\n          class="ui-slider-handle ui-state-default ui-corner-all ui-clickable"\n          [ngStyle]="{\'left\': rangeEndLeft, \'bottom\': rangeEndBottom}"\n          [ngClass]="{\'ui-slider-handle-active\':handleIndex==1}"\n          [kTooltip]="tooltip ? values[handleIndex] : \'\'"\n          [followTarget]="true"></span>\n</div>',providers:[g.DomHandler,j]}]}],e.propDecorators={tooltip:[{type:l.Input}]},e}(t.Slider),z=function(){function e(){}return e.decorators=[{type:l.NgModule,args:[{imports:[t.SliderModule,o.CommonModule,c.SharedModule,n.TooltipModule],declarations:[q],exports:[q]}]}],e}(),G={provide:u.NG_VALUE_ACCESSOR,useExisting:l.forwardRef(function(){return Y}),multi:!0},Y=function(){function e(){this.onChange=new l.EventEmitter,this.onFocus=new l.EventEmitter,this.onBlur=new l.EventEmitter,this._allowedKeys=[9,8,37,39,46],this._spinKeys={upArrow:38,rightArrow:39,downArrow:40,leftArrow:37},this._currentInput="minutes",this._keyPattern=/[0-9]/,this._minutesAsString="00",this._secondsAsString="00",this._minutes=0,this._seconds=0,this._disabled=!1,this.onModelChange=function(){},this.onModelTouched=function(){}}return e.prototype._spin=function(e,t){var n=this._getCurrentInputValue(),o=n;o=0===n&&-1===t?59:59===n&&1===t?0:n+t,this._setCurrentInputValue(o),this._formatValue(),this.onModelChange(60*this._minutes+this._seconds),this.onChange.emit(e)},e.prototype._getCurrentInputValue=function(){if("minutes"===this._currentInput)return this._minutes;if("seconds"===this._currentInput)return this._seconds;throw Error("Must not reach this part")},e.prototype._setCurrentInputValue=function(e){if("minutes"===this._currentInput)this._minutes=e;else{if("seconds"!==this._currentInput)throw Error("Must not reach this part");this._seconds=e}},e.prototype._setValue=function(e){var t=Number(e);59<(t=isNaN(t)?0:t)?this._setCurrentInputValue(59):t<0?this._setCurrentInputValue(0):this._setCurrentInputValue(t)},e.prototype._highlightInput=function(){if("minutes"===this._currentInput)this.minutesInputField.nativeElement.focus(),this.minutesInputField.nativeElement.select();else{if("seconds"!==this._currentInput)throw Error("Must not reach this part");this.secondsInputField.nativeElement.focus(),this.secondsInputField.nativeElement.select()}},e.prototype._clearTimer=function(){this._timer&&clearInterval(this._timer)},e.prototype._repeat=function(e,t,n){var o=this,i=t||500;this._clearTimer(),this._timer=setTimeout(function(){o._repeat(e,40,n)},i),this._spin(e,n)},e.prototype._formatValue=function(){if("minutes"===this._currentInput)this._minutesAsString=this._minutes<10?"0"+this._minutes:String(this._minutes),this.minutesInputField.nativeElement.value=this._minutesAsString;else{if("seconds"!==this._currentInput)throw Error("Must not reach this part");this._secondsAsString=this._seconds<10?"0"+this._seconds:String(this._seconds),this.secondsInputField.nativeElement.value=this._secondsAsString}},e.prototype._setDefaultValues=function(){this._minutes=0,this._seconds=0,this._secondsAsString="00",this._minutesAsString="00"},e.prototype._setInitialValues=function(e){this._minutes=Math.floor(e/60),this._seconds=e%60,this._minutesAsString=this._minutes<10?"0"+this._minutes:String(this._minutes),this.minutesInputField.nativeElement.value=this._minutesAsString,this._secondsAsString=this._seconds<10?"0"+this._seconds:String(this._seconds),this.secondsInputField.nativeElement.value=this._secondsAsString},e.prototype._onInputKeydown=function(e){e.which===this._spinKeys.upArrow||e.which===this._spinKeys.rightArrow?(this._spin(e,1),e.preventDefault()):e.which!==this._spinKeys.downArrow&&e.which!==this._spinKeys.leftArrow||(this._spin(e,-1),e.preventDefault())},e.prototype._onInputKeyPress=function(e){var t=String.fromCharCode(e.charCode),n=!this._keyPattern.test(t),o=-1===this._allowedKeys.indexOf(e.keyCode);n&&o&&e.preventDefault()},e.prototype._onInputKeyup=function(e){var t=e.target.value;this._setValue(t),this._formatValue(),this.onModelChange(60*this._minutes+this._seconds)},e.prototype._handleChange=function(e){this.onChange.emit(e)},e.prototype._onInputFocus=function(e,t){this._currentInput=t,this.onFocus.emit(e)},e.prototype._onInputBlur=function(e){this.onModelTouched(),this.onBlur.emit(e)},e.prototype._onButtonMousedown=function(e,t){this._disabled||(this._highlightInput(),this._repeat(e,null,t))},e.prototype._onButtonMouseup=function(e){this._disabled||this._clearTimer()},e.prototype._onButtonMouseleave=function(e){this._disabled||this._clearTimer()},e.prototype.setDisabledState=function(e){this._disabled=e},e.prototype.writeValue=function(e){"number"!=typeof e?this._setDefaultValues():this._setInitialValues(e)},e.prototype.registerOnChange=function(e){this.onModelChange=e},e.prototype.registerOnTouched=function(e){this.onModelTouched=e},e.decorators=[{type:l.Component,args:[{selector:"kTimeSpinner",template:'<div class="kSpinnerContainer" [class.ui-state-disabled]="_disabled">\n    <input #minutes\n           class="kMinutes"\n           type="text"\n           maxlength="2"\n           [disabled]="_disabled"\n           [value]="_minutesAsString"\n           (click)="minutes.select()"\n           (keydown)="_onInputKeydown($event)"\n           (keyup)="_onInputKeyup($event)"\n           (keypress)="_onInputKeyPress($event)"\n           (change)="_handleChange($event)"\n           (focus)="_onInputFocus($event, \'minutes\')"\n           (blur)="_onInputBlur($event)">\n    <span class="kDelimiter">:</span>\n    <input #seconds class="kSeconds" type="text"\n           [value]="_secondsAsString"\n           [disabled]="_disabled"\n           (click)="seconds.select()"\n           (keydown)="_onInputKeydown($event)"\n           (keyup)="_onInputKeyup($event)"\n           (keypress)="_onInputKeyPress($event)"\n           (change)="_handleChange($event)"\n           (focus)="_onInputFocus($event, \'seconds\')"\n           (blur)="_onInputBlur($event)">\n    <button type="button"\n            [ngClass]="{\'ui-spinner-button ui-spinner-up ui-corner-tr ui-button ui-widget ui-state-default\':true,\'ui-state-disabled\':_disabled}"\n            [disabled]="_disabled"\n            (mouseleave)="_onButtonMouseleave($event)"\n            (mousedown)="_onButtonMousedown($event, 1)"\n            (mouseup)="_onButtonMouseup($event)">\n        <span class="kIcondropdown_arrow_top kSpinnerBtn"></span>\n    </button>\n    <button type="button"\n            class="kSpinDown"\n            [ngClass]="{\'ui-spinner-button ui-spinner-down ui-corner-br ui-button ui-widget ui-state-default\':true,\'ui-state-disabled\':_disabled}"\n            [disabled]="_disabled"\n            (mouseleave)="_onButtonMouseleave($event)"\n            (mousedown)="_onButtonMousedown($event, -1)"\n            (mouseup)="_onButtonMouseup($event)">\n        <span class="kIcondropdown_arrow_bottom kSpinnerBtn"></span>\n    </button>\n</div>\n',styles:[".kSpinnerContainer{background-color:#fff;width:78px;height:16px;display:inline-block;overflow:visible;position:relative;vertical-align:middle;border:1px solid #ccc;border-radius:3px;padding:5px 10px 11px 0}.kSpinnerContainer input{border:0;width:25px;height:18px;font-size:15px;color:#999;font-weight:100}.kSpinnerContainer input:focus{outline:0}.kSpinnerContainer .kDelimiter{color:#999;font-weight:100}.kSpinnerContainer .kMinutes{text-align:right}.kSpinnerContainer .kSpinnerBtn{font-size:10px;color:#333}.kSpinnerContainer .ui-state-disabled{opacity:.35;filter:Alpha(Opacity=35);background-image:none;cursor:default!important}.kSpinnerContainer .ui-spinner-button{border:0;margin-right:1px;height:14px;cursor:pointer}.kSpinnerContainer .ui-spinner-down{margin-bottom:5px}"],providers:[t.DomHandler,G]}]}],e.propDecorators={minutesInputField:[{type:l.ViewChild,args:["minutes"]}],secondsInputField:[{type:l.ViewChild,args:["seconds"]}],onChange:[{type:l.Output}],onFocus:[{type:l.Output}],onBlur:[{type:l.Output}]},e}(),W=function(){function e(){}return e.decorators=[{type:l.NgModule,args:[{imports:[o.CommonModule,c.SharedModule],declarations:[Y],exports:[Y]}]}],e}(),X=function(){function e(e){var t=this;this.dt=e,this.subscription=this.dt.tableService.sortSource$.subscribe(function(e){t.updateSortState()})}return e.prototype.ngOnInit=function(){this.updateSortState(),this.isEnabled=!!this.field},e.prototype.updateSortState=function(){this.isEnabled&&(this.sorted=this.dt.isSorted(this.field))},e.prototype.onClick=function(e){this.isEnabled&&(this.dt.sort({originalEvent:e,field:this.field}),f.DomHandler.clearSelection())},e.prototype.ngOnDestroy=function(){this.subscription&&this.subscription.unsubscribe()},e.decorators=[{type:l.Directive,args:[{selector:"[kpSortableColumn]",host:{"[class.ui-sortable-column]":"isEnabled","[class.ui-state-highlight]":"sorted"}}]}],e.ctorParameters=function(){return[{type:m.Table}]},e.propDecorators={field:[{type:l.Input,args:["kpSortableColumn"]}],onClick:[{type:l.HostListener,args:["click",["$event"]]}]},e}(),J=function(){function e(){}return e.decorators=[{type:l.NgModule,args:[{imports:[],declarations:[X],exports:[X],providers:[]}]}],e}(),Q=function(){function e(){}return e.decorators=[{type:l.Component,args:[{selector:"k-column",template:""}]}],e.propDecorators={field:[{type:l.Input}],style:[{type:l.Input}],header:[{type:l.Input}],template:[{type:l.ContentChild,args:[l.TemplateRef]}]},e}(),Z=function(e,t){return e===t?0:e<t?-1:1},ee="mouseup",te="mousemove",ne="mouseenter",oe="mouseleave",ie=function(){function e(e){this.renderer=e,this.valueChange=new l.EventEmitter,this.dragModeOff=!0,this.selectedIndexes=[],this._currentPlaceHolderIndex=-1,this._dropAvailable=!1,this.unDraggableFromTop=0,this.unDraggableFromBottom=0,this.rowTrackBy=function(e,t){return t},this.columnTrackBy=function(e,t){return t},this.paginator=!1,this.showIndex=!1,this.multipleDragAndDrop=!1,this.selectable=!1,this.selectionChange=new l.EventEmitter,this.pageChange=new l.EventEmitter}return Object.defineProperty(e.prototype,"value",{get:function(){if(this.dragModeOff)return this._value},set:function(e){e?(this._value=C(e),this._orderItems()):this._value=null},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.paginator&&(this.unDraggableFromBottom=this.rows),this._orderItems(),this.draggable=this.draggableElement.nativeElement,this.tableBodyElement=this.tableBody.nativeElement,this.mouseMove=y.Observable.fromEvent(document,te).delay(50),y.Observable.fromEvent(document,ee).subscribe(function(){return e.onMouseUp()}),y.Observable.fromEvent(this.tableBody.nativeElement,oe).subscribe(function(){return e._onMouseLeave()}),y.Observable.fromEvent(this.tableBody.nativeElement,ne).subscribe(function(){return e._onMouseEnter()})},e.prototype.ngAfterContentInit=function(){this.columns=this.cols.toArray()},e.prototype.onMouseMove=function(e){this._updateDraggable(e)},e.prototype.onMouseOver=function(e,t){if(!this.dragModeOff&&t!==this._currentPlaceHolderIndex){var n=e.currentTarget.getBoundingClientRect().top+e.currentTarget.getBoundingClientRect().height/2,o=Object.create(Object.getPrototypeOf(this.draggableItems[t]));Object.assign(o,this.draggableItems[t]),-1!==this._currentPlaceHolderIndex&&this.draggableItems.splice(this._currentPlaceHolderIndex,1),e.clientY>n?this._currentPlaceHolderIndex=t+1:this._currentPlaceHolderIndex=t,this.draggableItems.splice(this._currentPlaceHolderIndex,0,o),this.draggableItems[this._currentPlaceHolderIndex]["class"]="hovered",this._updateView()}},e.prototype.onMouseDown=function(e,t){var n=this;if(1===e.which){if(this.multipleDragAndDrop){var o=this.getItemIndex(t);if(-1===this.selectedIndexes.indexOf(o)&&(this.selectedIndexes=C([o],this.selectedIndexes)),this.selectedIndexes.length===this._value.length)return;this.selectedIndexes.forEach(function(e){return n._value[e]["class"]="open"}),this._value=C(this._value)}e.preventDefault(),this.currentDraggableItem=this.draggableItems[t],this._updateDraggable(e),this.dragModeOff=!1,this._currentDraggedIndex=t,this._currentDraggedElement=e.currentTarget,this._currentDraggedElement.classList.add("open"),this.mouseMoveSubscription=this.mouseMove.subscribe(function(e){return n.onMouseMove(e)}),this.renderer.addClass(this.draggable,"fadeIn")}},e.prototype.onMouseUp=function(){var e,t=this;if(!this.dragModeOff)if(this.dragModeOff=!0,this._currentDraggedElement.classList.remove("open"),this._value.forEach(function(e){return delete e["class"]}),this.mouseMoveSubscription.unsubscribe(),this.renderer.setStyle(document.body,"cursor","default"),this._dropAvailable){if(-1!==this._currentPlaceHolderIndex)if(this.multipleDragAndDrop){var n=this.draggableItems[this._currentPlaceHolderIndex],o=this.selectedIndexes.sort(Z).map(function(e){return t._value[e+(e>=t._currentPlaceHolderIndex?1:0)]});o.forEach(function(e){return t._value.splice(t._value.indexOf(e),1)}),(e=this._value).splice.apply(e,C([this._value.indexOf(n),1],o)),this._currentPlaceHolderIndex=-1,this.selectedIndexes=[],this._orderItems(),this._updateView(),this.onSelectionChange()}else{var i=this._currentDraggedIndex>=this._currentPlaceHolderIndex?1:0;this.draggableItems[this._currentPlaceHolderIndex]=this.draggableItems[this._currentDraggedIndex+i],this.draggableItems.splice(this._currentDraggedIndex+i,1),this._currentPlaceHolderIndex=-1,this._updateView()}}else this.draggableItems.splice(this._currentPlaceHolderIndex,1),this._currentPlaceHolderIndex=-1,this.selectedIndexes=[],this.onSelectionChange(),this._updateView()},e.prototype.paginate=function(e){this.unDraggableFromTop=e.first,this.unDraggableFromBottom=e.first+e.rows,this.value=C(this.unDraggableItemsFromTop,this.draggableItems,this.unDraggableItemsFromBottom),this.pageChange.emit(e)},e.prototype.selectAll=function(e){this.selectedIndexes=e?C(Array.from(Array(this._value.length),function(e,t){return t})):[],this.onSelectionChange()},e.prototype.onSelectionChange=function(){var t=this;this.selectionChange.emit(this.selectedIndexes.sort(Z).map(function(e){return t._value[e]}))},e.prototype.getItemIndex=function(e){return this._value.indexOf(this.draggableItems[e])},e.prototype._updateView=function(){this.value=this.paginator?C(this.unDraggableItemsFromTop,this.draggableItems,this.unDraggableItemsFromBottom):C(this.draggableItems),this.dragModeOff&&this.valueChange.emit(this.value)},e.prototype._updateDraggable=function(e){this.renderer.setStyle(this.draggable,"position","fixed"),this.renderer.setStyle(this.draggable,"left",e.clientX+20+"px"),this.renderer.setStyle(this.draggable,"top",e.clientY-35+"px")},e.prototype._onMouseLeave=function(){this._dropAvailable=!1,this.dragModeOff||this.renderer.setStyle(document.body,"cursor","no-drop")},e.prototype._onMouseEnter=function(){this._dropAvailable=!0},e.prototype._orderItems=function(){if(this.value)if(this.paginator){var e=-1===this._currentPlaceHolderIndex?0:1;this.unDraggableItemsFromTop=C(this.value.slice(0,this.unDraggableFromTop)),this.unDraggableItemsFromBottom=C(this.value.slice(this.unDraggableFromBottom+e)),this.draggableItems=C(this.value.slice(this.unDraggableFromTop,this.unDraggableFromBottom+e))}else this.draggableItems=C(this.value)},e.decorators=[{type:l.Component,args:[{selector:"k-draggable-data-table",template:'<table [ngClass]="{ \'onDragMode\' : !dragModeOff }">\n  <thead>\n  <tr>\n    <th class="draggable-row-icon-placeholder"></th>\n    <th *ngIf="selectable" class="draggable-row-check-box">\n      <p-checkbox (onChange)="selectAll($event)"></p-checkbox>\n    </th>\n    <td *ngIf="showIndex" class="draggable-row-index"></td>\n    <th *ngFor="let col of columns" [ngStyle]="col.style">{{col.header}}</th>\n  </tr>\n  </thead>\n  <tbody #tableBody>\n\n  <tr *ngFor="let row of draggableItems;index as i;" [class]="row.class" [ngClass]="{ \'draggable-row\' : true }"\n      (mouseover)="onMouseOver($event, i)" (mouseup)="onMouseUp()">\n\n    <td class="draggable-row-icon-placeholder" (mousedown)="onMouseDown($event, i)">\n      <span class="draggable-row-icon"></span>\n      <span class="draggable-row-icon"></span>\n      <span class="draggable-row-icon"></span>\n      <span class="draggable-row-icon"></span>\n    </td>\n    <td *ngIf="selectable" class="draggable-row-check-box">\n      <p-checkbox [value]="getItemIndex(i)" [(ngModel)]="selectedIndexes" (onChange)="onSelectionChange()">\n      </p-checkbox>\n    </td>\n    <td *ngIf="showIndex" class="draggable-row-index" (mousedown)="onMouseDown($event, i)">\n      <span>{{getItemIndex(i) + 1}}</span>\n    </td>\n    <td *ngFor="let col of columns" [ngStyle]="col.style" (mousedown)="onMouseDown($event, i)">\n      <ng-container\n        *ngTemplateOutlet="col.template; context: { $implicit: col, rowData: row, rowIndex: getItemIndex(i)}"></ng-container>\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<div *ngIf="(!!draggableItems && draggableItems.length === 0) || !draggableItems"\n     class="empty-state-placeholder">\n  <ng-container *ngTemplateOutlet="emptyStateTemplate"></ng-container>\n</div>\n\n<p-paginator *ngIf="paginator" [rows]="rows" [totalRecords]="value ? value.length : 0"\n             [rowsPerPageOptions]="rowsPerPageOptions" (onPageChange)="paginate($event)">\n</p-paginator>\n\n<div #draggable [hidden]="dragModeOff"\n     [ngClass]="{ \'multiple-drag-and-drop\' : (multipleDragAndDrop && selectedIndexes.length > 1) }"\n     (mouseup)="onMouseUp()" (mousemove)="onMouseMove($event)">\n  <span *ngIf="multipleDragAndDrop && selectedIndexes.length > 1" class="selected-items-counter">{{selectedIndexes.length}}</span>\n  <ng-container *ngTemplateOutlet="draggableViewTemplate; context: {currentDraggableItem: currentDraggableItem}">\n  </ng-container>\n</div>\n',styles:["table{width:100%;text-align:left;table-layout:fixed;border-collapse:collapse}table thead{border:1px solid #d9d9d9;border-left:none;border-right:none}table thead tr{height:32px;color:#999}table tbody{overflow:auto}table tbody tr{height:70px;background:#fff;color:#999}table tr{border:1px solid #d9d9d9;color:#333;border-left:none;border-right:none}.open{opacity:.5}.hovered{background-color:#ebebeb!important;text-indent:-9999px;border:none!important}.draggable-row-icon{display:none;width:4px;height:4px;border-radius:2px;background-color:#ccc;margin:4px 0 4px 7px}.draggable-row-check-box,.draggable-row-icon-placeholder,.draggable-row-index{width:15px}.draggable-row-check-box{width:44px}.draggable-row{cursor:-webkit-grab;cursor:grab}.onDragMode .draggable-row{cursor:-webkit-grabbing;cursor:grabbing}.draggable-row:hover .draggable-row-icon{display:block}.onDragMode .draggable-row:hover .draggable-row-icon{display:none}.fadeIn{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.multiple-drag-and-drop{box-shadow:5px 5px 0 0 #fff,7px 7px 8px 0 rgba(50,50,50,.38);border-radius:2px}.selected-items-counter{z-index:1;width:20px;height:20px;background:#00a784;display:block;border-radius:10px;color:#fff;text-align:center;position:absolute;top:-10px;right:-10px;font-size:small;line-height:150%;font-weight:700}.empty-state-placeholder{text-align:center}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}"]}]}],e.ctorParameters=function(){return[{type:l.Renderer2}]},e.propDecorators={emptyStateTemplate:[{type:l.Input}],draggableViewTemplate:[{type:l.Input}],valueChange:[{type:l.Output}],draggableElement:[{type:l.ViewChild,args:["draggable"]}],tableBody:[{type:l.ViewChild,args:["tableBody"]}],cols:[{type:l.ContentChildren,args:[Q]}],value:[{type:l.Input}],unDraggableFromTop:[{type:l.Input}],unDraggableFromBottom:[{type:l.Input}],rowTrackBy:[{type:l.Input}],columnTrackBy:[{type:l.Input}],paginator:[{type:l.Input}],rows:[{type:l.Input}],rowsPerPageOptions:[{type:l.Input}],showIndex:[{type:l.Input}],multipleDragAndDrop:[{type:l.Input}],selectable:[{type:l.Input}],selectionChange:[{type:l.Output}],pageChange:[{type:l.Output}]},e}(),re=function(){function e(){}return e.decorators=[{type:l.NgModule,args:[{imports:[o.CommonModule,t.CheckboxModule,t.PaginatorModule],declarations:[ie,Q],exports:[ie,Q],providers:[]}]}],e}(),le={provide:u.NG_VALUE_ACCESSOR,useExisting:l.forwardRef(function(){return se}),multi:!0},se=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return _(e,n),e.prototype.onItemClick=function(e,t){t.disabled?e.stopPropagation():n.prototype.onItemClick.call(this,e,t)},e.prototype.selectItem=function(e,t){t.disabled?e.stopPropagation():n.prototype.selectItem.call(this,e,t)},e.decorators=[{type:l.Component,args:[{selector:"kDropdown",template:'<div #container [ngClass]="{\'ui-dropdown ui-widget ui-state-default ui-corner-all ui-helper-clearfix\':true,\n            \'ui-state-disabled\':disabled,\'ui-dropdown-open\':overlayVisible,\'ui-state-focus\':focused, \'ui-dropdown-clearable\': showClear && !disabled}"\n     (click)="onMouseclick($event)" [ngStyle]="style" [class]="styleClass">\n  <div class="ui-helper-hidden-accessible" *ngIf="autoWidth">\n    <select [required]="required" [attr.name]="name" [attr.aria-label]="selectedOption ? selectedOption.label : \' \'" tabindex="-1" aria-hidden="true">\n      <option *ngIf="placeholder">{{placeholder}}</option>\n      <ng-container *ngIf="group">\n        <optgroup *ngFor="let option of options" [attr.label]="option.label">\n          <option *ngFor="let option of option.items" [value]="option.value" [selected]="selectedOption == option">{{option.label}}</option>\n          <optgroup>\n      </ng-container>\n      <ng-container *ngIf="!group">\n        <option *ngFor="let option of options" [value]="option.value" [selected]="selectedOption == option">{{option.label}}</option>\n      </ng-container>\n    </select>\n  </div>\n  <div class="ui-helper-hidden-accessible">\n    <input #in [attr.id]="inputId" type="text" [attr.aria-label]="selectedOption ? selectedOption.label : \' \'" readonly (focus)="onInputFocus($event)" role="listbox"\n           (blur)="onInputBlur($event)" (keydown)="onKeydown($event, true)" [disabled]="disabled" [attr.tabindex]="tabindex" [attr.autofocus]="autofocus">\n  </div>\n  <label [ngClass]="{\'ui-dropdown-label ui-inputtext ui-corner-all\':true,\'ui-dropdown-label-empty\':(label == null || label.length === 0)}" *ngIf="!editable && (label != null)">\n    <ng-container *ngIf="!selectedItemTemplate">{{label||\'empty\'}}</ng-container>\n    <ng-container *ngTemplateOutlet="selectedItemTemplate; context: {$implicit: selectedOption}"></ng-container>\n  </label>\n  <label [ngClass]="{\'ui-dropdown-label ui-inputtext ui-corner-all ui-placeholder\':true,\'ui-dropdown-label-empty\': (placeholder == null || placeholder.length === 0)}" *ngIf="!editable && (label == null)">{{placeholder||\'empty\'}}</label>\n  <input #editableInput type="text" [attr.aria-label]="selectedOption ? selectedOption.label : \' \'" class="ui-dropdown-label ui-inputtext ui-corner-all" *ngIf="editable" [disabled]="disabled" [attr.placeholder]="placeholder"\n         (click)="onEditableInputClick($event)" (input)="onEditableInputChange($event)" (focus)="onEditableInputFocus($event)" (blur)="onInputBlur($event)">\n  <i class="ui-dropdown-clear-icon pi pi-times" (click)="clear($event)" *ngIf="value != null && showClear && !disabled"></i>\n  <div class="ui-dropdown-trigger ui-state-default ui-corner-right">\n    <span class="ui-dropdown-trigger-icon ui-clickable" [ngClass]="dropdownIcon"></span>\n  </div>\n  <div #panel [ngClass]="\'ui-dropdown-panel ui-widget-content ui-corner-all ui-shadow\'" [@panelState]="overlayVisible ? \'visible\' : \'hidden\'"\n       [style.display]="overlayVisible ? \'block\' : \'none\'" [ngStyle]="panelStyle" [class]="panelStyleClass">\n    <div *ngIf="filter" class="ui-dropdown-filter-container" (input)="onFilter($event)" (click)="$event.stopPropagation()">\n      <input #filter type="text" autocomplete="off" class="ui-dropdown-filter ui-inputtext ui-widget ui-state-default ui-corner-all" [attr.placeholder]="filterPlaceholder"\n             (keydown.enter)="$event.preventDefault()" (keydown)="onKeydown($event, false)">\n      <span class="ui-dropdown-filter-icon pi pi-search"></span>\n    </div>\n    <div #itemswrapper class="ui-dropdown-items-wrapper" [style.max-height]="scrollHeight||\'auto\'">\n      <ul class="ui-dropdown-items ui-dropdown-list ui-widget-content ui-widget ui-corner-all ui-helper-reset">\n        <ng-container *ngIf="group">\n          <ng-template ngFor let-optgroup [ngForOf]="optionsToDisplay">\n            <li class="ui-dropdown-item-group">\n              <span *ngIf="!groupTemplate">{{optgroup.label||\'empty\'}}</span>\n              <ng-container *ngTemplateOutlet="groupTemplate; context: {$implicit: optgroup}"></ng-container>\n            </li>\n            <ng-container *ngTemplateOutlet="itemslist; context: {$implicit: optgroup.items, selectedOption: selectedOption}"></ng-container>\n          </ng-template>\n        </ng-container>\n        <ng-container *ngIf="!group">\n          <ng-container *ngTemplateOutlet="itemslist; context: {$implicit: optionsToDisplay, selectedOption: selectedOption}"></ng-container>\n        </ng-container>\n        <ng-template #itemslist let-options let-selectedOption="selectedOption">\n          <li *ngFor="let option of options;let i=index"\n              [ngClass]="{\n                \'ui-dropdown-item ui-corner-all\':true,\n                \'ui-state-highlight\':(selectedOption == option),\n                \'ui-dropdown-item-empty\':!option.label||option.label.length === 0,\n                \'ui-state-disabled\': option.disabled\n              }"\n              (click)="onItemClick($event, option)">\n            <span *ngIf="!itemTemplate">{{option.label||\'empty\'}}</span>\n            <ng-container *ngTemplateOutlet="itemTemplate; context: {$implicit: option}"></ng-container>\n          </li>\n        </ng-template>\n        <li *ngIf="filter && optionsToDisplay && optionsToDisplay.length === 0">{{emptyFilterMessage}}</li>\n      </ul>\n    </div>\n  </div>\n</div>\n',styles:[".ui-dropdown{display:inline-block;position:relative;cursor:pointer;vertical-align:middle}.ui-dropdown .ui-dropdown-clear-icon{position:absolute;top:50%;font-size:.75em;height:1em;margin-top:-.5em;right:2.5em}.ui-dropdown .ui-dropdown-trigger{border-right:none;border-top:none;border-bottom:none;cursor:pointer;width:1.5em;height:100%;position:absolute;right:0;top:0;padding:0 .25em}.ui-dropdown .ui-dropdown-trigger .ui-dropdown-trigger-icon{top:50%;left:50%;margin-top:-.5em;margin-left:-.5em;position:absolute}.ui-dropdown .ui-dropdown-label{display:block;border:none;white-space:nowrap;overflow:hidden;font-weight:400;width:100%;padding-right:2.5em}.ui-dropdown-item-empty,.ui-dropdown-label-empty{text-indent:-9999px;overflow:hidden}.ui-state-disabled{opacity:.6;cursor:default}.ui-dropdown.ui-state-disabled .ui-dropdown-label,.ui-dropdown.ui-state-disabled .ui-dropdown-trigger{cursor:default}.ui-dropdown label.ui-dropdown-label{cursor:pointer}.ui-dropdown input.ui-dropdown-label{cursor:default}.ui-dropdown .ui-dropdown-panel{min-width:100%}.ui-dropdown-panel{position:absolute;height:auto;display:none}.ui-dropdown-panel .ui-dropdown-items-wrapper{overflow:auto}.ui-dropdown-panel .ui-dropdown-item{font-weight:400;border:0;cursor:pointer;margin:1px 0;padding:.125em .25em;text-align:left}.ui-dropdown-panel .ui-dropdown-item-group{font-weight:700;cursor:default}.ui-dropdown-panel .ui-dropdown-list{padding:.4em;border:0}.ui-dropdown-panel .ui-dropdown-filter{width:100%;box-sizing:border-box;padding-right:1.5em}.ui-dropdown-panel .ui-dropdown-filter-container{position:relative;margin:0;padding:.4em;display:inline-block;width:100%}.ui-dropdown-panel .ui-dropdown-filter-container .ui-dropdown-filter-icon{position:absolute;top:.8em;right:1em}.ui-fluid .ui-dropdown{width:100%}"],animations:[s.trigger("panelState",[s.state("hidden",s.style({opacity:0})),s.state("visible",s.style({opacity:1})),s.transition("visible => hidden",s.animate("400ms ease-in")),s.transition("hidden => visible",s.animate("400ms ease-out"))])],host:{"[class.ui-inputwrapper-filled]":"filled","[class.ui-inputwrapper-focus]":"focused"},providers:[le]}]}],e}(w.Dropdown),ae=function(){function e(){}return e.decorators=[{type:l.NgModule,args:[{imports:[o.CommonModule,t.DropdownModule],declarations:[se],exports:[se],providers:[]}]}],e}();e.KalturaPrimeNgUIModule=O,e.KALTURA_AUTOCOMPLETE_VALUE_ACCESSOR=D,e.AutoComplete=E,e.AutoCompleteModule=F,e.DropdownCloseOnScroll=k,e.MenuCloseOnScroll=M,e.StickyDatatableHeaderDirective=S,e.CLEARABLE_INPUT_VALUE_ACCESSOR=$,e.ClearableInputComponent=P,e.ClearableInputModule=V,e.DynamicFormModule=U,e.KALTURA_SLIDER_VALUE_ACCESSOR=j,e.SliderComponent=q,e.SliderModule=z,e.SPINNER_VALUE_ACCESSOR=G,e.TimeSpinnerComponent=Y,e.TimeSpinnerModule=W,e.KPSortableColumn=X,e.KPTableModule=J,e.KALTURA_MULTISELECT_VALUE_ACCESSOR=H,e.MultiSelectComponent=R,e.MultiSelectModule=N,e.DraggableDataTableComponent=ie,e.DraggableDataTableModule=re,e.DropdownModule=ae,e.ɵa=T,e.ɵb=A,e.ɵf=Q,e.ɵg=le,e.ɵh=se,e.ɵd=L,e.ɵe=B,e.ɵc=K,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=kaltura-ng-kaltura-primeng-ui.umd.min.js.map