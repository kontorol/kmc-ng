{"version":3,"sources":["null","ng://@kaltura-ng/kaltura-primeng-ui/lib/directives/sticky-datatable-header.directive.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/directives/dropdown-close-on-scroll.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/directives/menu-close-on-scroll.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/kaltura-primeng-ui.module.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/auto-complete/auto-complete.component.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/auto-complete/highlight.pipe.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/auto-complete/is-suggestion-disabled.pipe.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/auto-complete/auto-complete.module.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/clearable-input/clearable-input.component.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/clearable-input/clearable-input.module.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/dynamic-form/prime-control.component.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/dynamic-form/prime-list-options.pipe.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/multi-select/multi-select.component.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/multi-select/multi-select-item.component.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/multi-select/multi-select.module.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/dynamic-form/dynamic-form.module.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/slider/slider.component.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/slider/slider.module.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/time-spinner/time-spinner.component.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/time-spinner/time-spinner.module.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/k-p-table/k-p-sortable-column.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/k-p-table/k-p-table.module.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/draggable-data-table/column.component.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/draggable-data-table/draggable-data-table.component.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/draggable-data-table/draggable-data-table.module.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/dropdown/dropdown.component.ts","ng://@kaltura-ng/kaltura-primeng-ui/lib/dropdown/dropdown.module.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","StickyDatatableHeaderDirective","elementRef","renderer","_stickyScrollService","_this","_super","_dataTableRef","tslib_1.__extends","_getStickyElement","headers","nativeElement","querySelectorAll","console","warn","_onSticky","updateHeaderSize","_onUnsetSticky","_stickyElement","style","position","width","onResize","isSticky","boundingClientRect","getBoundingClientRect","tableWidth","Directive","args","selector","ElementRef","Renderer","StickyScrollService","StickyDirective","DropdownCloseOnScroll","_registered","_closeDropdownFunc","closeDropdown","bind","_isDestroyed","ngAfterViewInit","dropdown","el","addEventListener","handleScrollRegistration","_dropdownChangesSubscription","onChange","subscribe","event","scrollTarget","setTimeout","overlayVisible","removeEventListener","ngOnDestroy","unsubscribe","hide","Input","ContentChild","Dropdown","MenuCloseOnScroll","menu","tieredMenu","_menu","onWindowScroll","closeMenu","Menu","decorators","type","Optional","TieredMenu","HostListener","KalturaPrimeNgUIModule","NgModule","imports","CommonModule","InputTextModule","MenuModule","KalturaCommonModule","declarations","exports","providers","KALTURA_AUTOCOMPLETE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","AutoComplete","multi","cd","differs","_suggestionsProvider$","_loading","_showNoItems","_errorMessage","_allowMultiple","_placeholder","ObjectUtils","overlayHovered","limitToSuggestions","suggestionSelectableField","suggestionItemField","tooltipResolver","classField","suggestionLabelField","addOnPaste","itemClick","EventEmitter","defineProperty","_suggestions","val","panelEL","show","suggestionsUpdated","autoHighlight","highlightOption","onPaste","content","clipboardData","getData","indexOf","preventDefault","split","map","item","trim","forEach","tag","_addValueFromInput","_clearInputValue","onModelTouched","isIE11","KalturaBrowserUtils","detectBrowser","BrowserNames","IE11","provider$","data","input","minLength","isLoading","suggestions","errorMessage","getValue","clearValue","multiInputEL","_isItemSelected","multiple","rawInputValue","searchText","some","toLowerCase","status","focus","newValue","onItemAdding","field","selectItem","onInputBlur","scrollTop","onInput","$event","onKeydown","preventKeydown","which","key","status_1","undefined","stopPropagation","onUserSelectItem","_canSelectSuggestion","_getSuggestionText","suggestion","result","selectedItemValue","focusInput","disabled","onItemClick","emit","Component","styles","template","animations","trigger","state","transform","opacity","transition","animate","host","[class.ui-inputwrapper-filled]","[class.ui-inputwrapper-focus]","Renderer2","ChangeDetectorRef","IterableDiffers","Output","ViewChild","PrimeAutoComplete","HighlightPipe","arg","regex","RegExp","replace","Pipe","name","IsSuggestionDisabledPipe","AutoCompleteModule","ButtonModule","SharedModule","TooltipModule","CLEARABLE_INPUT_VALUE_ACCESSOR","ClearableInputComponent","onFocus","onBlur","onEnterKeyup","onClear","_disabled","_value","_showClearBtn","onModelChange","_clearInput","setDisabledState","registerOnChange","fn","registerOnTouched","writeValue","String","_enterPressed","DomHandler","ClearableInputModule","FormsModule","PrimeControl","errorMsg","form","controls","control","valid","ngOnInit","isValid","getErrorMsg","onFormStatusChanges","asDatePickerControl","DatePickerControl","asDynamicDropdownControl","DynamicDropdownControl","asListControl","ListControl","statusChanges","pipe","cancelOnDestroy","formControl","errors","firstErrorKey","keys","find","errorKey","hasError","PrimeListOptionsPipe","values","addDefaultButton","label","text","unshift","KALTURA_MULTISELECT_VALUE_ACCESSOR","MultiSelectComponent","_cd","selectAllLabel","menuItemDisplayStyle","_removeHideOnScrollHandler","_addHideOnScrollHandler","hideOnScroll","listenElement","document","querySelector","Element","_hideOnScrollListener","listen","isPartiallyChecked","isAllChecked","MultiSelect","MultiSelectItem","onClick","onOptionClick","originalEvent","option","onOptionKeydown","MultiSelectModule","PrimeMultiSelectModule","ScrollingModule","DynamicFormModule","ReactiveFormsModule","DropdownModule","InputTextareaModule","CalendarModule","InputSwitchModule","KALTURA_SLIDER_VALUE_ACCESSOR","SliderComponent","apply","tooltip","Slider","SliderModule","PrimeSliderModule","SPINNER_VALUE_ACCESSOR","TimeSpinnerComponent","_allowedKeys","_spinKeys","upArrow","rightArrow","downArrow","leftArrow","_currentInput","_keyPattern","_minutesAsString","_secondsAsString","_minutes","_seconds","_spin","dir","currentValue","_getCurrentInputValue","nextValue","_setCurrentInputValue","_formatValue","Error","_setValue","Number","isNaN","_highlightInput","minutesInputField","select","secondsInputField","_clearTimer","_timer","clearInterval","_repeat","interval","_setDefaultValues","_setInitialValues","Math","floor","_onInputKeydown","_onInputKeyPress","inputChar","fromCharCode","charCode","notANumber","test","notAllowedKey","keyCode","_onInputKeyup","inputValue","_handleChange","_onInputFocus","_onInputBlur","_onButtonMousedown","_onButtonMouseup","_onButtonMouseleave","TimeSpinnerModule","KPSortableColumn","dt","subscription","tableService","sortSource$","sortMeta","updateSortState","isEnabled","sorted","isSorted","sort","clearSelection","[class.ui-sortable-column]","[class.ui-state-highlight]","Table","KPTableModule","ColumnComponent","TemplateRef","sortingFunction","a","Events","DraggableDataTableComponent","valueChange","dragModeOff","selectedIndexes","_currentPlaceHolderIndex","_dropAvailable","unDraggableFromTop","unDraggableFromBottom","rowTrackBy","index","columnTrackBy","paginator","showIndex","multipleDragAndDrop","selectable","selectionChange","pageChange","_orderItems","rows","draggable","draggableElement","tableBodyElement","tableBody","mouseMove","Observable","fromEvent","delay","onMouseUp","_onMouseLeave","_onMouseEnter","ngAfterContentInit","columns","cols","toArray","onMouseMove","_updateDraggable","onMouseOver","middle","currentTarget","top","height","hoveredRow","getPrototypeOf","draggableItems","assign","splice","clientY","class","_updateView","onMouseDown","currentClickedIndex","getItemIndex","currentDraggableItem","_currentDraggedIndex","_currentDraggedElement","add","mouseMoveSubscription","addClass","remove","setStyle","body","insertIndexReference","draggedItems","_a","onSelectionChange","buffer","paginate","first","unDraggableItemsFromTop","unDraggableItemsFromBottom","selectAll","from","_","x","clientX","slice","ContentChildren","DraggableDataTableModule","CheckboxModule","PaginatorModule","DROPDOWN_VALUE_ACCESSOR","DropdownComponent","PrimeDropdownModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, Renderer, ElementRef } from '@angular/core';\nimport { StickyScrollService } from '@kaltura-ng/kaltura-ui';\nimport { StickyDirective } from '@kaltura-ng/kaltura-ui';\n\n@Directive({\n    selector: '[kStickyHeader]'\n})\n\nexport class StickyDatatableHeaderDirective extends StickyDirective {\n\n    private _dataTableRef: ElementRef;\n    constructor(elementRef: ElementRef, renderer: Renderer, _stickyScrollService: StickyScrollService) {\n        super(elementRef, renderer, _stickyScrollService);\n        this._dataTableRef = elementRef;\n    }\n\n    protected _getStickyElement(elementRef: ElementRef) :any{\n        const headers = elementRef.nativeElement.querySelectorAll('.ui-table-scrollable-header-box,.ui-datatable-scrollable-header-box');\n\n        if (headers && headers.length > 0) {\n            // console.log(\"got primeng table header!\");\n            return headers[0];\n        } else {\n            console.warn(\"failed to extract table header (did you set the prime table with header and set it to scrollable?)\");\n            return null;\n        }\n    }\n\n    protected _onSticky():void{\n        this.updateHeaderSize();\n    }\n\n    protected _onUnsetSticky():void{\n        this._stickyElement.style.position = 'static';\n        this._stickyElement.style.width = 'auto';\n    }\n\n    protected onResize():void{\n        this.updateHeaderSize();\n    };\n\n    private updateHeaderSize(){\n        if (this.isSticky) {\n            const boundingClientRect: any = this._dataTableRef.nativeElement.getBoundingClientRect();\n            const tableWidth = boundingClientRect['right'] - boundingClientRect['left'];\n            this._stickyElement.style.width = tableWidth + 'px';\n        }\n    }\n\n}\n","import { Directive, OnDestroy, AfterViewInit, ContentChild, Input } from '@angular/core';\nimport { Dropdown } from 'primeng/primeng';\nimport { ISubscription } from 'rxjs/Subscription';\n\n@Directive({\n\tselector: '[kDropdownCloseOnScroll]',\n})\nexport class DropdownCloseOnScroll implements AfterViewInit, OnDestroy {\n\n\t@Input() scrollTarget: any;\n\t@ContentChild(Dropdown) public dropdown: Dropdown;\n\n\tprivate _registered = false;\n\tprivate _dropdownChangesSubscription: ISubscription;\n\tprivate _closeDropdownFunc = this.closeDropdown.bind(this);\n\tprivate _isDestroyed = false;\n\n\tconstructor() {\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.dropdown.el.nativeElement.addEventListener('click', ()=>{\n\t\t\tthis.handleScrollRegistration();\n\t\t});\n\t\tthis._dropdownChangesSubscription = this.dropdown.onChange.subscribe((event) => {\n\t\t\tthis.handleScrollRegistration();\n\t\t});\n\t}\n\n\thandleScrollRegistration():void{\n\t\tif (this.scrollTarget && this.dropdown){\n\t\t\tsetTimeout(()=>{\n\t\t\t\tif (!this._isDestroyed) {\n\t\t\t\t\tif (this.dropdown.overlayVisible && !this._registered) {\n\t\t\t\t\t\tthis.scrollTarget.addEventListener('scroll', this._closeDropdownFunc);\n\t\t\t\t\t\tthis._registered = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.dropdown.overlayVisible && this._registered) {\n\t\t\t\t\t\tthis.scrollTarget.removeEventListener('scroll', this._closeDropdownFunc);\n\t\t\t\t\t\tthis._registered = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},0);\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.scrollTarget && this._registered) {\n\t\t\tthis.scrollTarget.removeEventListener('scroll', this._closeDropdownFunc);\n\t\t}\n\t\tif (this._dropdownChangesSubscription){\n\t\t\tthis._dropdownChangesSubscription.unsubscribe();\n\t\t\tthis._dropdownChangesSubscription = null;\n\t\t}\n\t\tthis._isDestroyed = true;\n\t}\n\n\tprivate closeDropdown():void{\n\t\tif (this.dropdown && typeof this.dropdown.hide !== \"undefined\"){\n\t\t\tthis.dropdown.hide();\n\t\t\tthis.scrollTarget.removeEventListener('scroll', this._closeDropdownFunc);\n\t\t\tthis._registered = false;\n\t\t}\n\t}\n}\n","import { Directive, ContentChild, HostListener, Input, Optional } from '@angular/core';\nimport { Menu, TieredMenu } from 'primeng/primeng';\n\n@Directive({\n\tselector: '[kMenuCloseOnScroll]',\n})\nexport class MenuCloseOnScroll {\n\tprivate  _menu: Menu | TieredMenu;\n\n\tconstructor(@Optional() menu: Menu, @Optional() tieredMenu: TieredMenu)\n\t{\n        this._menu = menu || tieredMenu;\n\t}\n\n\t@HostListener(\"window:scroll\", [])\n\tonWindowScroll() {\n\t\tthis.closeMenu();\n\t}\n\n\tprivate closeMenu():void {\n        if (this._menu && typeof this._menu.hide !== \"undefined\") {\n            this._menu.hide();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputTextModule, MenuModule } from 'primeng/primeng';\nimport { StickyDatatableHeaderDirective } from './directives/sticky-datatable-header.directive';\nimport { DropdownCloseOnScroll } from './directives/dropdown-close-on-scroll';\nimport { MenuCloseOnScroll } from './directives/menu-close-on-scroll';\nimport { KalturaCommonModule } from '@kaltura-ng/kaltura-common';\n\n/**\n * @deprecated use separated module for each component\n */\n@NgModule({\n    imports: <any[]>[\n        CommonModule, InputTextModule, MenuModule, KalturaCommonModule\n    ],\n    declarations: <any[]>[\n\t    StickyDatatableHeaderDirective,\n        DropdownCloseOnScroll,\n        MenuCloseOnScroll\n    ],\n    exports: <any[]>[\n\t    StickyDatatableHeaderDirective,\n        DropdownCloseOnScroll,\n        MenuCloseOnScroll\n    ],\n    providers: <any[]>[\n    ]\n})\nexport class KalturaPrimeNgUIModule {}\n","import {\n  Component,\n  AfterViewInit,\n  forwardRef,\n  ChangeDetectorRef,\n  AfterViewChecked,\n  Input,\n  ElementRef,\n  OnDestroy,\n  Renderer2,\n  IterableDiffers,\n  Output,\n  EventEmitter,\n  ViewChild,\n  HostListener, AfterContentInit, DoCheck\n} from '@angular/core';\nimport {trigger,state,style,transition,animate,AnimationEvent} from '@angular/animations';\nimport { Observable } from 'rxjs/Observable';\nimport { ISubscription } from 'rxjs/Subscription';\nimport { AutoComplete as PrimeAutoComplete, AUTOCOMPLETE_VALUE_ACCESSOR } from \"primeng/components/autocomplete/autocomplete\";\nimport { KalturaBrowserUtils, BrowserNames } from '@kaltura-ng/kaltura-ui';\nimport { DomHandler } from \"primeng/components/dom/domhandler\";\nimport { ObjectUtils } from 'primeng/components/utils/objectutils';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\n// [kmcng] upon upgrade: Be patient and bring a big cup of coffee.... good luck!\n\nexport interface SuggestionsProviderData{\n    suggestions : any[];\n    isLoading : boolean;\n    errorMessage? : string;\n}\n\n/* tslint:disable */\nexport const KALTURA_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AutoComplete),\n    multi: true\n};\n\n/* tslint:enable */\n\n@Component({\n    selector: 'kAutoComplete',\n\n    /* tslint:disable */\n    // [kmcng] upon upgrade: sync with original component\n    styles: [`:host /deep/ .ui-autocomplete-token-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-size:14px}@media screen and (max-width:991px){:host /deep/ .ui-autocomplete-token-label{max-width:270px}}@media screen and (min-width:992px){:host /deep/ .ui-autocomplete-token-label{max-width:270px}}@media screen and (min-width:1280px){:host /deep/ .ui-autocomplete-token-label{max-width:500px}}@media screen and (min-width:1600px){:host /deep/ .ui-autocomplete-token-label{max-width:800px}}:host /deep/ .kHighlightedText{text-decoration:underline}`],\n    template: `<span [ngClass]=\"{'ui-autocomplete ui-widget kOverrideFAIcons':true,'ui-autocomplete-dd':dropdown,'ui-autocomplete-multiple':multiple}\"\n      [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input *ngIf=\"!multiple\" #in [attr.type]=\"type\" [attr.id]=\"inputId\" [ngStyle]=\"inputStyle\"\n                   [class]=\"inputStyleClass\" autocomplete=\"off\" [attr.required]=\"required\"\n                   [ngClass]=\"'ui-inputtext ui-widget ui-state-default ui-corner-all ui-autocomplete-input'\"\n                   [value]=\"inputFieldValue ? (field ? ObjectUtils.resolveFieldData(inputFieldValue, field) || inputFieldValue : value) : null\"\n                   (click)=\"onInputClick($event)\" (input)=\"onInput($event)\" (keydown)=\"onKeydown($event)\"\n                   (keyup)=\"onKeyup($event)\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\"\n                   (change)=\"onInputChange($event)\"\n                   [attr.placeholder]=\"_placeholder\" [attr.size]=\"size\" [attr.maxlength]=\"maxlength\"\n                   [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\"\n            ><ul *ngIf=\"multiple\" #multiContainer\n                 class=\"ui-autocomplete-multiple-container ui-widget ui-inputtext ui-state-default ui-corner-all\"\n                 [ngClass]=\"{'ui-state-disabled':disabled,'ui-state-focus':focus}\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" [class]=\"'ui-autocomplete-token ui-state-highlight ui-corner-all ' + (classField && val ? val[classField] : '')\"\n                    [kTooltip]=\"val\" [tooltipResolver]=\"tooltipResolver\">\n                    <span class=\"ui-autocomplete-token-icon pi pi-fw pi-times\" (click)=\"removeItem(token)\"\n                          *ngIf=\"!disabled\"></span>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"ui-autocomplete-token-label\" (click)=\"onItemClick(val)\">{{field ? ObjectUtils.resolveFieldData(val, field): val}}</span>\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: val}\"></ng-container>\n                </li>\n                <li class=\"ui-autocomplete-input-token\">\n                    <input #multiIn [attr.type]=\"type\" [attr.id]=\"inputId\" [disabled]=\"disabled\"\n                           [attr.placeholder]=\"(value&&value.length ? null : _placeholder)\" [attr.tabindex]=\"tabindex\"\n                           (input)=\"onInput($event)\" (click)=\"onInputClick($event)\"\n                           (keydown)=\"onKeydown($event)\" [readonly]=\"readonly\" (keyup)=\"onKeyup($event)\"\n                           (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\"\n                           autocomplete=\"off\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\">\n                </li>\n            </ul\n            ><i *ngIf=\"loading\" class=\"ui-autocomplete-loader pi pi-spinner pi-spin\"></i><button #ddBtn type=\"button\"\n                                                                                                 pButton\n                                                                                                 icon=\"pi pi-fw pi-caret-down\"\n                                                                                                 class=\"ui-autocomplete-dropdown\"\n                                                                                                 [disabled]=\"disabled\"\n                                                                                                 (click)=\"handleDropdownClick($event)\"\n                                                                                                 *ngIf=\"dropdown\"></button>\n            <div #panel class=\"ui-autocomplete-panel ui-widget-content ui-corner-all ui-shadow\"\n                 [style.display]=\"overlayVisible ? 'block' : 'none'\" [style.width]=\"appendTo ? 'auto' : '100%'\"\n                 [style.max-height]=\"scrollHeight\" [@overlayAnimation]=\"'visible'\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationDone($event)\"\n                 (mouseenter)=\"overlayHovered=true\" (mouseleave)=\"overlayHovered=false\">\n                <ul\n                  class=\"ui-autocomplete-items ui-autocomplete-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\"\n                  *ngIf=\"overlayVisible\">\n                <li *ngIf=\"_loading\" class=\"ui-autocomplete-notification-item\">\n                Searching...\n            </li>\n            <li *ngIf=\"_showNoItems\" class=\"ui-autocomplete-notification-item\">\n                No Items Found...\n            </li>\n            <li *ngIf=\"_errorMessage\" class=\"ui-autocomplete-notification-item\">\n                {{ _errorMessage }}\n            </li>\n                    <li *ngFor=\"let option of suggestions; let idx = index\"\n                        [ngClass]=\"{'ui-autocomplete-list-item ui-corner-all':true,'ui-state-highlight':(highlightOption==option)}\"\n                    [class.kIsItemDisabled]=\"option | kIsSuggestionDisabled : suggestionSelectableField\"\n                        (mouseenter)=\"highlightOption=option\" (mouseleave)=\"highlightOption=null\"\n                        (click)=\"selectItem(option)\">\n                        <span *ngIf=\"!itemTemplate\"\n                              [innerHTML]=\"_getSuggestionText(option) | kHighlight : searchText\"></span>\n                        <ng-container\n                          *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: idx}\"></ng-container>\n                    </li>\n                    <li *ngIf=\"noResults && emptyMessage\" class=\"ui-autocomplete-list-item ui-corner-all\">{{emptyMessage}}</li>\n                </ul>\n            </div>\n        </span>\n`,\n    providers: [KALTURA_AUTOCOMPLETE_VALUE_ACCESSOR],\n    animations: [\n      trigger('overlayAnimation', [\n        state('void', style({\n          transform: 'translateY(5%)',\n          opacity: 0\n        })),\n        state('visible', style({\n          transform: 'translateY(0)',\n          opacity: 1\n        })),\n        transition('void => visible', animate('225ms ease-out')),\n        transition('visible => void', animate('195ms ease-in'))\n      ])\n    ],\n    host: {\n        '[class.ui-inputwrapper-filled]': 'filled',\n        '[class.ui-inputwrapper-focus]': 'focus'\n    },\n    /* tslint:enable */\n})\n// [kmcng] upon upgrade: compare implemented interfaces in the original component (no need to include ControlValueAccessor)\nexport class AutoComplete extends PrimeAutoComplete implements OnDestroy, AfterViewChecked, AfterContentInit,DoCheck  {\n    private _suggestionsProvider$ : ISubscription = null;\n    public _loading = false;\n    public _showNoItems = false;\n    public _errorMessage = '';\n    private _allowMultiple = false;\n    public _placeholder = '';\n    public ObjectUtils = ObjectUtils;\n    public overlayHovered = false;\n\n    @Input()\n    onItemAdding : (value : any) => any;\n\n    @Input()\n    limitToSuggestions : boolean = true;\n\n    @Input()\n    suggestionSelectableField : string = '';\n\n    @Input()\n    suggestionItemField : string = '';\n\n    @Input() tooltipResolver: string | ((val: any) => string) = null;\n\n    @Input()\n    classField: string = null;\n\n    @Input()\n    suggestionLabelField : string = '';\n\n    @Input()\n    addOnPaste = true;\n\n    get multiple() : boolean\n    {\n        // always return true to affect component ui of selected item.\n        // internally you should use _allowMultiple\n        return true;\n    }\n\n    @Input() get suggestions(): any[] {\n        return this._suggestions;\n    }\n\n    @Output()\n    itemClick = new EventEmitter<any>();\n\n    @ViewChild('panel') panelEL: ElementRef;\n\n    @HostListener('paste', ['$event']) onPaste(event: ClipboardEvent) {\n      if (!this.addOnPaste) {\n        return;\n      }\n\n      const content = event.clipboardData.getData('text/plain');\n\n      if (content && content.indexOf(',') !== -1) {\n        event.preventDefault();\n        content.split(',')\n          .map(item => item.trim())\n          .forEach(tag => this._addValueFromInput(tag));\n\n        if (!this.overlayVisible) {\n          // primng fix: if the panel is not visible (!overlayVisible) and we currently leaving the input field clear input content\n          this._clearInputValue();\n        }\n\n        this.onModelTouched();\n      }\n    }\n\n\n    set suggestions(val:any[]) {\n        this._suggestions = val;\n\n        if(this.panelEL && this.panelEL.nativeElement) {\n\n            // primeng fix: primeng uses function to show 'noResults' message if exists or hide the suggested otherwise.\n            // we removed this logic since it conflict with our improved logic\n            if(this._suggestions && this._suggestions.length) {\n\n                this.show();\n                this.suggestionsUpdated = true;\n\n                if(this.autoHighlight) {\n                    this.highlightOption = this._suggestions[0];\n                }\n            }\n        }\n    }\n\n    @Input() set placeholder(value : string)\n    {\n        // IE11 bug causing output event to fire upon input field blur event when there is a placeholder. Thus, we remove the placeholder attribute for IE11, single selection mode.\n        // Additional details: https://connect.microsoft.com/IE/feedback/details/810538/ie-11-fires-input-event-on-focus\n        const isIE11 = KalturaBrowserUtils.detectBrowser() === BrowserNames.IE11;\n        this._placeholder = isIE11 && !this._allowMultiple ? '' : value;\n    }\n    get placeholder(): string{\n        return this._placeholder;\n    }\n\n    @Input() set multiple(value : boolean)\n    {\n        this._allowMultiple = value;\n    }\n\n    @Input()\n    set suggestionsProvider(provider$ : Observable<SuggestionsProviderData>)\n    {\n        if (this._suggestionsProvider$)\n        {\n            this._suggestionsProvider$.unsubscribe();\n            this._suggestionsProvider$ = null;\n        }\n\n        if (provider$)\n        {\n            this._suggestionsProvider$ = provider$.subscribe(\n                data => {\n\n                    const valueLengthValid = this.input && (this.input.value || '').trim().length >= this.minLength;\n                    if (!valueLengthValid) {\n                        // primeng fix: if user use backspace to delete search text, should abort the last query.\n                        return;\n                    }\n\n                    if (data.isLoading)\n                    {\n                        this._loading = true;\n                        this._showNoItems = false;\n                        this.suggestions = [];\n                        this._errorMessage = '';\n\n                        this.suggestionsUpdated = true; // make sure the suggestions panel is aligned to the height of the component\n                        this.show();\n                    }else\n                    {\n                        if (data.suggestions && data.suggestions.length)\n                        {\n                            this._loading = false;\n                            this.suggestions = data.suggestions;\n                        }else\n                        {\n                            this.suggestions = [];\n\n                            if (this._loading = true) {\n                                this._showNoItems = !data.errorMessage; // show no items notification only if result is valid\n                                this._loading = false;\n                                this.suggestionsUpdated = true; // make sure the suggestions panel is aligned to the height of the component\n                                this.show();\n                            }\n\n                            if (data.errorMessage)\n                            {\n                                this._errorMessage = data.errorMessage;\n                                this.suggestionsUpdated = true; // make sure the suggestions panel is aligned to the height of the component\n                                this.show();\n                            }\n\n\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n     public getValue() : any {\n         if (this._allowMultiple) {\n             if (this.value instanceof Array) {\n                 return this.value;\n             } else {\n                 return this.value ? [this.value] : [];\n             }\n         } else {\n             if (this.value instanceof Array) {\n                 return this.value.length > 0 ? this.value[0] : null;\n             } else {\n                 return this.value;\n             }\n         }\n     }\n\n     public clearValue() : void{\n        this.value = null;\n        this._clearInputValue()\n     }\n\n     public get searchText() : string\n     {\n        return this.input ? this.input.value : null;\n     }\n\n     private get input() : HTMLInputElement\n     {\n         // [kmcng] we override multi mode to always be multiple so the input should always huse the multiInputEl\n         return this.multiInputEL.nativeElement;\n     }\n\n    /**\n     *\n     * @param item\n     * returns {any|boolean}\n     * private\n     */\n    private _isItemSelected(item : any) : boolean\n    {\n        if (this.multiple) {\n            return this.value && this.value instanceof Array && this.value.indexOf(item) !== -1;\n        }else {\n            return this.value && this.value === item;\n        }\n    }\n\n    /**\n     * add value provided by user if the following conditions are confirmed:\n     * - input component is in focus and its' content length is valid.\n     * - no suggestion is currently highlighted\n     * returns { {status} } status 'added' if valid value, 'invalid' if cannot add the value or 'not relevant' if the request should be ignored\n     * private\n     */\n    private _addValueFromInput(value = null) : { status : 'added' | 'invalid' | 'not relevant' | 'duplicated'}\n    {\n        const rawInputValue = (value || this.searchText || '').trim();\n\n        // 1. if !`this.value` -> form is valid (assuming that we add value for the first time)\n        // 2. if each value is string and there's no same value in the `this.value` array -> form is valid\n        const isDuplicated = this.value && this.value.some(value => {\n          return typeof value === 'string' && value.toLowerCase() === rawInputValue.toLowerCase();\n        });\n\n        if (isDuplicated) {\n          return { status : 'duplicated'};\n        }\n\n        if (!this.limitToSuggestions && rawInputValue && !this.highlightOption && !this.overlayHovered && this.focus)\n        {\n            if ( rawInputValue.length >= 1 && !this._isItemSelected(rawInputValue)) {\n\n                let newValue = this.onItemAdding ? this.onItemAdding.call(null,rawInputValue) : rawInputValue;\n\n                if (newValue) {\n                    if (typeof newValue === 'string' && this.field) {\n                        console.warn(`The auto-complete component 'field' attribute is set to value '${this.field}' which indicates that the auto-complete value type is an object (did you forget to assign the 'onItemAdding' attribute to convert the user input which is of type type 'string' to a valid value?)`);\n                    }\n\n                    super.selectItem(newValue);\n                }else {\n                    if (typeof newValue === 'undefined' || newValue === null) {\n                        console.warn(`the function provided by attribute 'onItemAdding' resulted with null value, abort adding user input to aut-complete value`);\n                    }\n                }\n\n                this.hide();\n\n                return { status : 'added'};\n            }else\n            {\n                return { status : 'invalid'};\n            }\n\n\n        }else {\n            return { status : 'not relevant'};\n        }\n    }\n\n    onInputBlur(event) {\n\n        this._addValueFromInput();\n\n        if (!this.overlayVisible) {\n            // primng fix: if the panel is not visible (!overlayVisible) and we currently leaving the input field clear input content\n            this._clearInputValue();\n        }\n        super.onInputBlur(event);\n    }\n\n    /**\n     * Consume the arguments needed to construct 'AutoComplete' and pass them to self (the 'AutoComplete' constructor).\n     *\n     * This is a workaround since according to NG2 documentation the parent constructor should be called even if\n     * this component doesn't need a constructor.\n     * @param el\n     * @param differs\n     * @param renderer\n     * @param cd\n     */\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef, public differs: IterableDiffers)\n    {\n        super(el, renderer, cd, differs);\n    }\n\n\n    hide()\n    {\n        if (this.overlayVisible)\n        {\n            this.panelEL.nativeElement.scrollTop = 0; // primeng fix: scroll suggestions list to top (otherwise the scroll will be persist)\n            this.highlightOption = null; // primeng fix: the last selection using keyboard is not being cleared when selecting using 'enter'\n\n            // clear user notifications\n            this._loading = false;\n            this._showNoItems = false;\n            this._errorMessage = null;\n        }\n\n        if (!this.focus) {\n            // primng fix: if user not in the input (!focus) and we currently closing the visible panel - clear input content (relevant only for components whose 'limitToSuggestions' property is set to true\n            this._clearInputValue();\n        }\n\n        super.hide();\n    }\n\n    private _clearInputValue() : void{\n        if (this.input && this.input.value) {\n            this.input.value = ''; // clear existing value\n        }\n    }\n\n    public onInput($event) : void{\n        if (!this._allowMultiple)\n        {\n            this.value = null;\n        }\n\n        // primng fix: hide panel once the value length is less the minLength, primeng handles only situation where input value length == 0\n        if(this.input.value.length < this.minLength) {\n            this.hide();\n        }\n\n        super.onInput($event);\n    }\n\n    onKeydown(event)  {\n        let preventKeydown = false;\n\n        if ((event.which === 9 || event.which === 13 || event.key === ',') )\n        {\n            const status = this._addValueFromInput().status;\n\n            if (status !== 'not relevant') {\n                preventKeydown = true;\n\n                if (status === 'duplicated') {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                    this._clearInputValue();\n                }\n            }\n        }\n\n        if(!preventKeydown && this.overlayVisible) {\n            switch (event.which) {\n                case 9:  //tab\n                    // primeng fix: pressing 'tab' move the focus from the component but doesn't hide the suggestions.\n                    this.hide();\n                break;\n                case 13: //enter\n                    // prevent selecting of disabled item using keyboard (the mouse selection is handled separately)\n                    const highlightItemDisabled = this.highlightOption && this.suggestionSelectableField ?\n                        (typeof this.highlightOption[this.suggestionSelectableField] !== undefined && !this.highlightOption[this.suggestionSelectableField])\n                        : false;\n\n                    if (highlightItemDisabled) {\n                        preventKeydown = true;\n                    }\n                    break;\n            }\n        }\n\n        if (!preventKeydown)\n        {\n            super.onKeydown(event);\n        }else {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n\n\n    ngOnDestroy()\n    {\n        if (this._suggestionsProvider$)\n        {\n            this._suggestionsProvider$.unsubscribe();\n            this._suggestionsProvider$ = null;\n        }\n    }\n\n    onUserSelectItem(event : any, item : any) : void {\n        if (!this._canSelectSuggestion(item)) {\n            // prevent selection of disabled suggestions.\n            event.stopPropagation();\n            event.preventDefault();\n            this.input.focus(); // move the focus back to the input box otherwise the compmonent will stop working\n            return;\n        }\n\n        this.selectItem(item);\n    }\n\n    public _getSuggestionText(suggestion: any)\n    {\n        let result = suggestion;\n        if (suggestion)\n        {\n            if (this.suggestionLabelField)\n            {\n                result = suggestion[this.suggestionLabelField];\n            }else if (this.suggestionItemField && this.field)\n            {\n                result = suggestion[this.suggestionItemField];\n                result = result ? result[this.field] : '';\n            }else if (this.suggestionItemField)\n            {\n                result = suggestion[this.suggestionItemField];\n            }else if (this.field)\n            {\n                result = suggestion[this.field];\n            }\n        }\n\n        return result;\n    }\n\n    private _canSelectSuggestion(item : any) : boolean {\n        if (this.suggestionSelectableField)\n        {\n            if (typeof item[this.suggestionSelectableField] !== undefined && !item[this.suggestionSelectableField])\n            {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    selectItem(item : any) {\n        this.highlightOption = null; // primeng fix:  the last selected item when using keyboard is not being removed and will be used later to do a random selection\n\n        if (this._canSelectSuggestion(item)) {\n\n            let selectedItemValue = item;\n            if (this.suggestionItemField)\n            {\n                selectedItemValue = item[this.suggestionItemField];\n            }\n\n            if (selectedItemValue === null || typeof selectedItemValue === 'undefined') {\n                console.warn(\"[kaltura] -> trying to select a value that is either null or undefined. action ignored\"); // keep warning\n            }else {\n                super.selectItem(selectedItemValue);\n            }\n        }\n    }\n\n    public focusInput() {\n        setTimeout(() => {\n                if (this.input && this.input.focus && !this.input.disabled) {\n                    this.input.focus();\n                }\n        }, 0);\n    }\n\n    public onItemClick(item: any){\n        this.itemClick.emit(item);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n@Pipe({\n    name: 'kHighlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    transform(value: string, arg: string): string {\n        if (!arg.trim()) {\n            return value;\n        }\n\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<span class=\"kHighlightedText\">$1</span>');\n        } catch (e) {\n            return value;\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'kIsSuggestionDisabled'\n})\nexport class IsSuggestionDisabledPipe implements PipeTransform {\n    transform(value: any, arg: string): boolean {\n        return  (arg && typeof value[arg] === 'boolean' && value[arg] === false);\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from '@kaltura-ng/kaltura-ui';\nimport { InputTextModule } from 'primeng/components/inputtext/inputtext';\nimport { ButtonModule } from 'primeng/components/button/button';\nimport { SharedModule } from 'primeng/components/common/shared';\nimport { AutoComplete } from \"./auto-complete.component\";\nimport { HighlightPipe } from \"./highlight.pipe\";\nimport { IsSuggestionDisabledPipe } from \"./is-suggestion-disabled.pipe\";\n\n@NgModule({\n    imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, TooltipModule],\n    declarations: [AutoComplete, HighlightPipe, IsSuggestionDisabledPipe],\n    exports: [AutoComplete, HighlightPipe],\n\n})\nexport class AutoCompleteModule {\n}\n","import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomHandler } from 'primeng/primeng';\n\nexport const CLEARABLE_INPUT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ClearableInputComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'kClearableInput',\n  template: `<span class=\"k-clearable-input-wrapper\">\n    <input pInputText\n           class=\"k-clearable-input-input\"\n           [disabled]=\"disabled || _disabled\"\n           [placeholder]=\"placeholder\"\n           (change)=\"onChange.emit($event)\"\n           (focus)=\"onFocus.emit($event)\"\n           (blur)=\"onBlur.emit($event)\"\n           (keyup.enter)=\"_enterPressed()\"\n           [(ngModel)]=\"_value\">\n    <i *ngIf=\"_showClearBtn\" class=\"k-clearable-input-clear-btn\" title=\"Clear\" (click)=\"_clearInput()\">&times;</i>\n</span>`,\n  styles: [`.k-clearable-input-wrapper{position:relative}.k-clearable-input-wrapper .k-clearable-input-clear-btn{cursor:pointer;position:absolute;right:5px;top:-6px;font-weight:700;font-size:1.2em;color:#999;font-style:normal}`],\n  providers: [DomHandler, CLEARABLE_INPUT_VALUE_ACCESSOR],\n})\nexport class ClearableInputComponent implements ControlValueAccessor {\n  @Input() disabled: boolean;\n  @Input() placeholder: string;\n  \n  @Output() onChange: EventEmitter<any> = new EventEmitter();\n  @Output() onFocus: EventEmitter<any> = new EventEmitter();\n  @Output() onBlur: EventEmitter<any> = new EventEmitter();\n  @Output() onEnterKeyup: EventEmitter<string> = new EventEmitter<string>();\n  @Output() onClear: EventEmitter<void> = new EventEmitter<void>();\n  \n  public _disabled = false;\n  public _value = '';\n  public _showClearBtn = false;\n  \n  public _clearInput(): void {\n    this._value = '';\n    this._showClearBtn = false;\n    this.onModelChange(this._value);\n    this.onChange.emit(this._value);\n    this.onClear.emit();\n  }\n  \n  public onModelChange: Function = () => {\n  };\n  \n  public onModelTouched: Function = () => {\n  };\n  \n  public setDisabledState(val: boolean): void {\n    this._disabled = val;\n  }\n  \n  public registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n  \n  public registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n  \n  public writeValue(value: any): void {\n    this._value = String(value || '');\n    \n    if (!this._value.trim()) {\n      this._showClearBtn = false;\n    }\n  }\n  \n  public clearValue(): void {\n    this._value = '';\n    this._showClearBtn = false;\n    this.onModelChange(this._value);\n    this.onChange.emit(this._value);\n  }\n  \n  public _enterPressed(): void {\n    this.onEnterKeyup.emit(this._value);\n    this._showClearBtn = !!this._value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'primeng/components/common/shared';\nimport { ClearableInputComponent } from \"./clearable-input.component\";\nimport { InputTextModule } from 'primeng/primeng';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    InputTextModule,\n    FormsModule\n  ],\n  declarations: [ClearableInputComponent],\n  exports: [ClearableInputComponent],\n  \n})\nexport class ClearableInputModule {\n}","import {Component, Input, OnInit, OnDestroy} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport { DatePickerControl, DynamicDropdownControl, DynamicFormControlBase, ListControl } from '@kaltura-ng/kaltura-ui';\nimport { cancelOnDestroy, tag } from '@kaltura-ng/kaltura-common';\n\n@Component({\n    selector: 'k-prime-control',\n    template: `<div [formGroup]=\"form\" [ngSwitch]=\"control.controlType\">\n    <textarea  *ngSwitchCase=\"'TextArea'\" [formControlName]=\"control.key\"   [class.hasError]=\"errorMsg && form.controls[control.key].touched\" pInputTextarea ></textarea>\n\n    <input *ngSwitchCase=\"'Textbox'\" [formControlName]=\"control.key\"  [class.hasError]=\"errorMsg && form.controls[control.key].touched\" pInputText/>\n\n    <input *ngSwitchCase=\"'Number'\"  type=\"number\" [formControlName]=\"control.key\"  [class.hasError]=\"errorMsg && form.controls[control.key].touched\" pInputText />\n\n    <p-dropdown *ngSwitchCase=\"'Dropdown'\" [filter]=\"true\" [formControlName]=\"control.key\"  [options]=\"asDynamicDropdownControl(control).values | kPrimeListOptions: true\"></p-dropdown>\n\n    <kMultiSelect *ngSwitchCase=\"'List'\" [resetFilterOnHide]=\"true\" [formControlName]=\"control.key\"  [options]=\"asListControl(control).values | kPrimeListOptions : false\"></kMultiSelect>\n\n    <p-calendar *ngSwitchCase=\"'DatePicker'\" [formControlName]=\"control.key\"   icon=\"kIconcalendar\" [showIcon]=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" [showTime]=\"asDatePickerControl(control).showTime\" yearRange=\"2005:2050\" [dateFormat]=\"asDatePickerControl(control).dateFormat\"></p-calendar>\n\n    <p-inputSwitch  *ngSwitchCase=\"'Switch'\" [formControlName]=\"control.key\"> </p-inputSwitch>\n\n    <span *ngSwitchDefault=\"\">Missing control for {{control.controlType}}</span>\n\n    <p *ngIf=\"errorMsg && form.controls[control.key].touched\"\n       class=\"kFormError\">{{errorMsg}}\n    </p>\n</div>\n`,\n    styles: [``]\n})\nexport class PrimeControl implements OnInit, OnDestroy {\n    @Input() control: DynamicFormControlBase<any>;\n    @Input() form: FormGroup;\n\n    public errorMsg = '';\n\n    get isValid() {\n        return this.form.controls[this.control.key].valid;\n    }\n\n    ngOnInit() {\n        if (!this.isValid) {\n            this.errorMsg = this.getErrorMsg();\n        }\n        else {\n            this.errorMsg = '';\n        }\n\n        this.onFormStatusChanges();\n\n    }\n\n  asDatePickerControl (control: any): DatePickerControl {\n    return (control instanceof DatePickerControl) ? control : null;\n  }\n\n  asDynamicDropdownControl (control: any): DynamicDropdownControl {\n    return (control instanceof DynamicDropdownControl) ? control : null;\n  }\n\n  asListControl (control: any): ListControl {\n    return (control instanceof ListControl) ? control : null;\n  }\n\n    private onFormStatusChanges(): void {\n        this.form.statusChanges\n            .pipe(cancelOnDestroy(this))\n            .subscribe(() => {\n                if (!this.isValid) {\n                    this.errorMsg = this.getErrorMsg();\n                }\n                else {\n                    this.errorMsg = '';\n                }\n            });\n    }\n\n    private getErrorMsg(): string {\n        let result = \"\";\n        const formControl = this.form.controls[this.control.key];\n        if (this.control.errors && !formControl.valid) {\n            const firstErrorKey = Object.keys(this.control.errors).find(errorKey =>\n                formControl.hasError(errorKey));\n\n            if (firstErrorKey) {\n                result = this.control.errors[firstErrorKey];\n            }\n        }\n        return result;\n    }\n\n    ngOnDestroy() {\n\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'kPrimeListOptions'\n})\nexport class PrimeListOptionsPipe implements PipeTransform {\n\n    constructor(){}\n\n    transform(values : any[], addDefaultButton: boolean): any {\n        const result = (values || []).map(value => {\n\t\t    return {label: value.text, value: value.value};\n\t    });\n\n        if (addDefaultButton) {\n\t        result.unshift({label: 'Select a value', value: null});\n        }\n\n        return result;\n    }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MultiSelect } from 'primeng/primeng';\n\n/* tslint:disable */\nexport const KALTURA_MULTISELECT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MultiSelectComponent),\n  multi: true\n};\n\n/* tslint:enable */\n\n@Component({\n  selector: 'kMultiSelect',\n  styles: [`:host /deep/ .ui-multiselect-panel .pi-minus{background-color:#00a784;border:1px solid #00a784;color:#fff;width:16px;height:16px;border-radius:3px;top:-1px;position:relative;left:-1px}`],\n  template: `<div #container [ngClass]=\"{'ui-multiselect ui-widget ui-state-default ui-corner-all':true,'ui-multiselect-open':overlayVisible,'ui-state-focus':focus,'ui-state-disabled': disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\"\n     (click)=\"onMouseclick($event,in)\">\n  <div class=\"ui-helper-hidden-accessible\">\n    <input #in type=\"text\" readonly=\"readonly\" [attr.id]=\"inputId\" [attr.name]=\"name\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\"\n           [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" (keydown)=\"onKeydown($event)\">\n  </div>\n  <div class=\"ui-multiselect-label-container\" [title]=\"valuesAsString\">\n    <label class=\"ui-multiselect-label ui-corner-all\">\n      <ng-container *ngIf=\"!selectedItemsTemplate\">{{isAllChecked() ? (allSelectedLabel || valuesAsString) : valuesAsString}}</ng-container>\n      <ng-container *ngTemplateOutlet=\"selectedItemsTemplate; context: {$implicit: value}\"></ng-container>\n    </label>\n  </div>\n  <div [ngClass]=\"{'ui-multiselect-trigger ui-state-default ui-corner-right':true}\">\n    <span class=\"ui-multiselect-trigger-icon ui-clickable\" [ngClass]=\"dropdownIcon\"></span>\n  </div>\n  <div *ngIf=\"overlayVisible\" [ngClass]=\"['ui-multiselect-panel ui-widget ui-widget-content ui-corner-all ui-shadow']\" [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\"\n       [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\" (click)=\"panelClick=true\">\n    <div class=\"ui-widget-header ui-corner-all ui-multiselect-header ui-helper-clearfix\" [ngClass]=\"{'ui-multiselect-header-no-toggleall': !showToggleAll}\" *ngIf=\"showHeader\">\n      <div class=\"ui-chkbox ui-widget\" *ngIf=\"showToggleAll && !selectionLimit\">\n        <div class=\"ui-helper-hidden-accessible\">\n          <input type=\"checkbox\" readonly=\"readonly\" [checked]=\"isAllChecked()\" (focus)=\"onHeaderCheckboxFocus()\" (blur)=\"onHeaderCheckboxBlur()\" (keydown.space)=\"toggleAll($event)\">\n        </div>\n        <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" [ngClass]=\"{'ui-state-active':isAllChecked(), 'ui-state-focus': headerCheckboxFocus}\" (click)=\"toggleAll($event)\">\n          <span class=\"ui-chkbox-icon ui-clickable pi\"\n                [ngClass]=\"{'pi-check':isAllChecked(), 'pi-minus':isPartiallyChecked()}\"></span>\n        </div>\n      </div>\n      <div class=\"ui-multiselect-filter-container\" *ngIf=\"filter\">\n        <input #filterInput type=\"text\" role=\"textbox\" [value]=\"filterValue||''\" (input)=\"onFilter()\" class=\"ui-inputtext ui-widget ui-state-default ui-corner-all\" [attr.placeholder]=\"filterPlaceHolder\">\n        <span class=\"ui-multiselect-filter-icon pi pi-search\"></span>\n      </div>\n      <a class=\"ui-multiselect-close ui-corner-all\" tabindex=\"0\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\n        <span class=\"pi pi-times\"></span>\n      </a>\n      <ng-content select=\"p-header\"></ng-content>\n    </div>\n    <div class=\"ui-multiselect-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : (scrollHeight||'auto')\">\n      <ul class=\"ui-multiselect-items ui-multiselect-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\">\n        <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n          <ng-template ngFor let-option let-i=\"index\" [ngForOf]=\"options\">\n            <p-multiSelectItem [option]=\"option\" [selected]=\"isSelected(option.value)\" (onClick)=\"onOptionClick($event)\" (onKeydown)=\"onOptionKeydown($event)\"\n                               [maxSelectionLimitReached]=\"maxSelectionLimitReached\" [visible]=\"isItemVisible(option)\" [template]=\"itemTemplate\"></p-multiSelectItem>\n          </ng-template>\n        </ng-container>\n        <ng-template #virtualScrollList>\n          <cdk-virtual-scroll-viewport #viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll\">\n            <ng-container *cdkVirtualFor=\"let option of options; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\n              <p-multiSelectItem [option]=\"option\" [selected]=\"isSelected(option.value)\" (onClick)=\"onOptionClick($event)\" (onKeydown)=\"onOptionKeydown($event)\"\n                                 [maxSelectionLimitReached]=\"maxSelectionLimitReached\" [visible]=\"isItemVisible(option)\" [template]=\"itemTemplate\" [itemSize]=\"itemSize\"></p-multiSelectItem>\n            </ng-container>\n          </cdk-virtual-scroll-viewport>\n        </ng-template>\n      </ul>\n    </div>\n    <div class=\"ui-multiselect-footer ui-widget-content\" *ngIf=\"footerFacet\">\n      <ng-content select=\"p-footer\"></ng-content>\n    </div>\n  </div>\n</div>\n`,\n  animations: [\n    trigger('overlayAnimation', [\n      state('void', style({\n        transform: 'translateY(5%)',\n        opacity: 0\n      })),\n      state('visible', style({\n        transform: 'translateY(0)',\n        opacity: 1\n      })),\n      transition('void => visible', animate('{{showTransitionParams}}')),\n      transition('visible => void', animate('{{hideTransitionParams}}'))\n    ])\n  ],\n  host: {\n    '[class.ui-inputwrapper-filled]': 'filled',\n    '[class.ui-inputwrapper-focus]': 'focus'\n  },\n  providers: [KALTURA_MULTISELECT_VALUE_ACCESSOR]\n  /* tslint:enable */\n})\nexport class MultiSelectComponent extends MultiSelect implements OnDestroy {\n  @Input() disabledLabel: string;\n  @Input() allSelectedLabel: string;\n  @Input() selectAllLabel = 'Select All';\n  @Input() menuItemDisplayStyle = 'block';\n  @Input() hideOnScroll: string | Element;\n\n  private _hideOnScrollListener: () => void;\n\n  constructor(public el: ElementRef,\n              public renderer: Renderer2,\n              private _cd: ChangeDetectorRef) {\n    super(el, renderer, _cd);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._removeHideOnScrollHandler();\n  }\n\n  private _addHideOnScrollHandler() {\n    if (this.hideOnScroll) {\n      const listenElement = typeof this.hideOnScroll === 'string'\n        ? document.querySelector(this.hideOnScroll)\n        : this.hideOnScroll;\n\n      if (listenElement instanceof Element) {\n        this._hideOnScrollListener = this.renderer.listen(listenElement, 'scroll', () => this.hide());\n      }\n    }\n  }\n\n  private _removeHideOnScrollHandler() {\n    if (this.hideOnScroll && this._hideOnScrollListener) {\n      this._hideOnScrollListener();\n    }\n  }\n\n  public show(): void {\n    super.show();\n    this._addHideOnScrollHandler();\n  }\n\n  public hide(): void {\n    super.hide();\n    this._removeHideOnScrollHandler();\n  }\n\n  public isPartiallyChecked(): boolean {\n    return !this.isAllChecked() && (this.value || []).length > 0;\n  }\n}\n","import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { SelectItem } from 'primeng/api';\n\n@Component({\n  selector: 'p-multiSelectItem',\n  template: `\n    <li class=\"ui-multiselect-item ui-corner-all\" (click)=\"onOptionClick($event)\" (keydown)=\"onOptionKeydown($event)\"\n        [style.display]=\"visible ? 'block' : 'none'\" [attr.tabindex]=\"option.disabled ? null : '0'\" [ngStyle]=\"{'height': itemSize + 'px'}\"\n        [ngClass]=\"{'ui-state-highlight': selected, 'ui-state-disabled': (option.disabled || (maxSelectionLimitReached && !selected))}\">\n      <div class=\"ui-chkbox ui-widget\">\n        <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\"\n             [ngClass]=\"{'ui-state-active': selected}\">\n          <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"{'pi pi-check': selected}\"></span>\n        </div>\n      </div>\n      <label *ngIf=\"!template\">{{option.label}}</label>\n      <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option}\"></ng-container>\n    </li>\n  `\n})\nexport class MultiSelectItem {\n  \n  @Input() option: SelectItem;\n  \n  @Input() selected: boolean;\n  \n  @Input() disabled: boolean;\n  \n  @Input() visible: boolean;\n  \n  @Input() itemSize: number;\n  \n  @Input() template: TemplateRef<any>;\n  \n  @Input() maxSelectionLimitReached: boolean;\n  \n  @Output() onClick: EventEmitter<any> = new EventEmitter();\n  \n  @Output() onKeydown: EventEmitter<any> = new EventEmitter();\n  \n  onOptionClick(event: Event) {\n    this.onClick.emit({\n      originalEvent: event,\n      option: this.option\n    });\n  }\n  \n  onOptionKeydown(event: Event) {\n    this.onKeydown.emit({\n      originalEvent: event,\n      option: this.option\n    });\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from '@kaltura-ng/kaltura-ui';\nimport { SharedModule } from 'primeng/components/common/shared';\nimport { MultiSelectComponent } from './multi-select.component';\nimport { MultiSelectModule as PrimeMultiSelectModule } from 'primeng/primeng';\nimport { MultiSelectItem } from './multi-select-item.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\n@NgModule({\n  imports: [\n    PrimeMultiSelectModule,\n    CommonModule,\n    SharedModule,\n    TooltipModule,\n    ScrollingModule\n  ],\n  declarations: [MultiSelectComponent, MultiSelectItem],\n  exports: [MultiSelectComponent],\n})\nexport class MultiSelectModule {\n}\n","import { NgModule } from '@angular/core';\nimport { PrimeControl } from './prime-control.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport {  InputTextModule, InputTextareaModule,  CalendarModule,  DropdownModule, InputSwitchModule } from 'primeng/primeng';\nimport { PrimeListOptionsPipe } from './prime-list-options.pipe';\nimport { MultiSelectModule } from '../multi-select/multi-select.module';\n\n@NgModule(\n    {\n        imports : [\n            ReactiveFormsModule,\n            CommonModule,\n            DropdownModule,\n\t        MultiSelectModule,\n            InputTextModule,\n            InputTextareaModule,\n            CalendarModule,\n            InputSwitchModule\n\n        ],\n        declarations : [\n            PrimeControl,\n            PrimeListOptionsPipe\n        ],\n        exports : [\n            PrimeControl\n        ]\n    }\n)\nexport class DynamicFormModule\n{\n\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { DomHandler } from \"primeng/components/dom/domhandler\";\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Slider } from \"primeng/primeng\";\n\n/* tslint:disable */\nexport const KALTURA_SLIDER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SliderComponent),\n  multi: true\n};\n\n/* tslint:enable */\n\n@Component({\n  selector: 'kSlider',\n  styles: [`:host /deep/ .ui-slider{background-color:#ccc;height:6px;border:none}:host /deep/ .ui-slider .ui-slider-range{background:#00a784;border:2px solid #00a784}:host /deep/ .ui-slider .ui-slider-handle{top:-.3em;margin-left:-.6em;border-radius:50%;border:2px solid #00a784;height:16px;width:16px;box-shadow:0 2px 8px 0 rgba(0,0,0,.24)}`],\n  template: `<div [ngStyle]=\"style\" [class]=\"styleClass\"\n     [ngClass]=\"{\n         'ui-slider ui-widget ui-widget-content ui-corner-all':true,\n         'ui-state-disabled':disabled,\n         'ui-slider-horizontal':orientation == 'horizontal',\n         'ui-slider-vertical':orientation == 'vertical',\n         'ui-slider-animate':animate\n     }\"\n     (click)=\"onBarClick($event)\">\n\n    <span *ngIf=\"range && orientation == 'horizontal'\"\n          class=\"ui-slider-range ui-widget-header ui-corner-all\"\n          [ngStyle]=\"{'left':handleValues[0] + '%',width: (handleValues[1] - handleValues[0] + '%')}\"></span>\n\n    <span *ngIf=\"range && orientation == 'vertical'\"\n          class=\"ui-slider-range ui-widget-header ui-corner-all\"\n          [ngStyle]=\"{'bottom':handleValues[0] + '%',height: (handleValues[1] - handleValues[0] + '%')}\"></span>\n\n    <span *ngIf=\"!range && orientation=='vertical'\"\n          class=\"ui-slider-range ui-slider-range-min ui-widget-header ui-corner-all\"\n          [ngStyle]=\"{'height': handleValue + '%'}\"></span>\n\n    <span *ngIf=\"!range && orientation=='horizontal'\"\n          class=\"ui-slider-range ui-slider-range-min ui-widget-header ui-corner-all\"\n          [ngStyle]=\"{'width': handleValue + '%'}\"></span>\n\n    <span *ngIf=\"!range\"\n          class=\"ui-slider-handle ui-state-default ui-corner-all ui-clickable\"\n          (mousedown)=\"onMouseDown($event)\"\n          (touchstart)=\"onTouchStart($event)\"\n          (touchmove)=\"onTouchMove($event)\"\n          (touchend)=\"dragging=false\"\n          [style.transition]=\"dragging ? 'none': null\"\n          [ngStyle]=\"{\n            'left': orientation == 'horizontal' ? handleValue + '%' : null,\n            'bottom': orientation == 'vertical' ? handleValue + '%' : null\n          }\"\n          [kTooltip]=\"tooltip ? value : ''\"\n          [followTarget]=\"true\"></span>\n\n    <span *ngIf=\"range\"\n          (mousedown)=\"onMouseDown($event,0)\"\n          (touchstart)=\"onTouchStart($event,0)\"\n          (touchmove)=\"onTouchMove($event,0)\"\n          (touchend)=\"dragging=false\"\n          [style.transition]=\"dragging ? 'none': null\"\n          class=\"ui-slider-handle ui-state-default ui-corner-all ui-clickable\"\n          [ngStyle]=\"{'left': rangeStartLeft, 'bottom': rangeStartBottom}\"\n          [ngClass]=\"{'ui-slider-handle-active':handleIndex==0}\"\n          [kTooltip]=\"tooltip ? values[handleIndex] : ''\"\n          [followTarget]=\"true\"></span>\n\n    <span *ngIf=\"range\"\n          (mousedown)=\"onMouseDown($event,1)\"\n          (touchstart)=\"onTouchStart($event,1)\"\n          (touchmove)=\"onTouchMove($event,1)\"\n          (touchend)=\"dragging=false\"\n          [style.transition]=\"dragging ? 'none': null\"\n          class=\"ui-slider-handle ui-state-default ui-corner-all ui-clickable\"\n          [ngStyle]=\"{'left': rangeEndLeft, 'bottom': rangeEndBottom}\"\n          [ngClass]=\"{'ui-slider-handle-active':handleIndex==1}\"\n          [kTooltip]=\"tooltip ? values[handleIndex] : ''\"\n          [followTarget]=\"true\"></span>\n</div>`,\n  providers: [DomHandler, KALTURA_SLIDER_VALUE_ACCESSOR]\n  /* tslint:enable */\n})\n// [kmcng] upon upgrade: compare implemented interfaces in the original component (no need to include ControlValueAccessor)\nexport class SliderComponent extends Slider {\n  @Input() tooltip = true;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from '@kaltura-ng/kaltura-ui';\nimport { SharedModule } from 'primeng/components/common/shared';\nimport { SliderComponent } from \"./slider.component\";\nimport { SliderModule as PrimeSliderModule } from 'primeng/primeng';\n\n@NgModule({\n  imports: [\n    PrimeSliderModule,\n    CommonModule,\n    SharedModule,\n    TooltipModule],\n  declarations: [SliderComponent],\n  exports: [SliderComponent],\n  \n})\nexport class SliderModule {\n}","import { Component, ElementRef, EventEmitter, forwardRef, Output, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomHandler } from 'primeng/primeng';\n\nexport type InputType = 'minutes' | 'seconds';\n\nexport const SPINNER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TimeSpinnerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'kTimeSpinner',\n  template: `<div class=\"kSpinnerContainer\" [class.ui-state-disabled]=\"_disabled\">\n    <input #minutes\n           class=\"kMinutes\"\n           type=\"text\"\n           maxlength=\"2\"\n           [disabled]=\"_disabled\"\n           [value]=\"_minutesAsString\"\n           (click)=\"minutes.select()\"\n           (keydown)=\"_onInputKeydown($event)\"\n           (keyup)=\"_onInputKeyup($event)\"\n           (keypress)=\"_onInputKeyPress($event)\"\n           (change)=\"_handleChange($event)\"\n           (focus)=\"_onInputFocus($event, 'minutes')\"\n           (blur)=\"_onInputBlur($event)\">\n    <span class=\"kDelimiter\">:</span>\n    <input #seconds class=\"kSeconds\" type=\"text\"\n           [value]=\"_secondsAsString\"\n           [disabled]=\"_disabled\"\n           (click)=\"seconds.select()\"\n           (keydown)=\"_onInputKeydown($event)\"\n           (keyup)=\"_onInputKeyup($event)\"\n           (keypress)=\"_onInputKeyPress($event)\"\n           (change)=\"_handleChange($event)\"\n           (focus)=\"_onInputFocus($event, 'seconds')\"\n           (blur)=\"_onInputBlur($event)\">\n    <button type=\"button\"\n            [ngClass]=\"{'ui-spinner-button ui-spinner-up ui-corner-tr ui-button ui-widget ui-state-default':true,'ui-state-disabled':_disabled}\"\n            [disabled]=\"_disabled\"\n            (mouseleave)=\"_onButtonMouseleave($event)\"\n            (mousedown)=\"_onButtonMousedown($event, 1)\"\n            (mouseup)=\"_onButtonMouseup($event)\">\n        <span class=\"kIcondropdown_arrow_top kSpinnerBtn\"></span>\n    </button>\n    <button type=\"button\"\n            class=\"kSpinDown\"\n            [ngClass]=\"{'ui-spinner-button ui-spinner-down ui-corner-br ui-button ui-widget ui-state-default':true,'ui-state-disabled':_disabled}\"\n            [disabled]=\"_disabled\"\n            (mouseleave)=\"_onButtonMouseleave($event)\"\n            (mousedown)=\"_onButtonMousedown($event, -1)\"\n            (mouseup)=\"_onButtonMouseup($event)\">\n        <span class=\"kIcondropdown_arrow_bottom kSpinnerBtn\"></span>\n    </button>\n</div>\n`,\n  styles: [`.kSpinnerContainer{background-color:#fff;width:78px;height:16px;display:inline-block;overflow:visible;position:relative;vertical-align:middle;border:1px solid #ccc;border-radius:3px;padding:5px 10px 11px 0}.kSpinnerContainer input{border:0;width:25px;height:18px;font-size:15px;color:#999;font-weight:100}.kSpinnerContainer input:focus{outline:0}.kSpinnerContainer .kDelimiter{color:#999;font-weight:100}.kSpinnerContainer .kMinutes{text-align:right}.kSpinnerContainer .kSpinnerBtn{font-size:10px;color:#333}.kSpinnerContainer .ui-state-disabled{opacity:.35;filter:Alpha(Opacity=35);background-image:none;cursor:default!important}.kSpinnerContainer .ui-spinner-button{border:0;margin-right:1px;height:14px;cursor:pointer}.kSpinnerContainer .ui-spinner-down{margin-bottom:5px}`],\n  providers: [DomHandler, SPINNER_VALUE_ACCESSOR],\n})\nexport class TimeSpinnerComponent implements ControlValueAccessor {\n  @ViewChild('minutes') minutesInputField: ElementRef;\n  @ViewChild('seconds') secondsInputField: ElementRef;\n  \n  @Output() onChange: EventEmitter<any> = new EventEmitter();\n  @Output() onFocus: EventEmitter<any> = new EventEmitter();\n  @Output() onBlur: EventEmitter<any> = new EventEmitter();\n  \n  private _allowedKeys = [\n    9,  // tab\n    8,  // backspace\n    37, // leftArrow\n    39, // rightArrow\n    46  // deleteBtn\n  ];\n  private _spinKeys = {\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40,\n    leftArrow: 37\n  };\n  private _currentInput: InputType = 'minutes';\n  private _keyPattern: RegExp = /[0-9]/;\n  private _timer: any;\n  \n  public _minutesAsString = '00';\n  public _secondsAsString = '00';\n  \n  public _minutes = 0;\n  public _seconds = 0;\n  public _disabled = false;\n  \n  public onModelChange: Function = () => {\n  };\n  \n  public onModelTouched: Function = () => {\n  };\n  \n  private _spin(event: Event, dir: number) {\n    const currentValue = this._getCurrentInputValue();\n    let nextValue = currentValue;\n    if (currentValue === 0 && dir === -1) {\n      nextValue = 59;\n    } else if (currentValue === 59 && dir === 1) {\n      nextValue = 0;\n    } else {\n      nextValue = currentValue + dir;\n    }\n    \n    this._setCurrentInputValue(nextValue);\n    this._formatValue();\n    \n    this.onModelChange((this._minutes * 60) + this._seconds);\n    this.onChange.emit(event);\n  }\n  \n  private _getCurrentInputValue(): number {\n    if (this._currentInput === 'minutes') {\n      return this._minutes;\n    } else if (this._currentInput === 'seconds') {\n      return this._seconds;\n    } else {\n      throw Error('Must not reach this part');\n    }\n  }\n  \n  private _setCurrentInputValue(value: number): void {\n    if (this._currentInput === 'minutes') {\n      this._minutes = value;\n    } else if (this._currentInput === 'seconds') {\n      this._seconds = value;\n    } else {\n      throw Error('Must not reach this part');\n    }\n  }\n  \n  private _setValue(input: string): void {\n    let value = Number(input);\n    value = isNaN(value) ? 0 : value;\n    \n    if (value > 59) {\n      this._setCurrentInputValue(59);\n    } else if (value < 0) {\n      this._setCurrentInputValue(0);\n    } else {\n      this._setCurrentInputValue(value);\n    }\n  }\n  \n  private _highlightInput(): void {\n    if (this._currentInput === 'minutes') {\n      this.minutesInputField.nativeElement.focus();\n      this.minutesInputField.nativeElement.select();\n    } else if (this._currentInput === 'seconds') {\n      this.secondsInputField.nativeElement.focus();\n      this.secondsInputField.nativeElement.select();\n    } else {\n      throw Error('Must not reach this part');\n    }\n  }\n  \n  private _clearTimer(): void {\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n  }\n  \n  private _repeat(event: Event, interval: number, dir: number): void {\n    const i = interval || 500;\n    \n    this._clearTimer();\n    this._timer = setTimeout(() => {\n      this._repeat(event, 40, dir);\n    }, i);\n    \n    this._spin(event, dir);\n  }\n  \n  private _formatValue(): void {\n    if (this._currentInput === 'minutes') {\n      this._minutesAsString = this._minutes < 10 ? `0${this._minutes}` : String(this._minutes);\n      this.minutesInputField.nativeElement.value = this._minutesAsString;\n    } else if (this._currentInput === 'seconds') {\n      this._secondsAsString = this._seconds < 10 ? `0${this._seconds}` : String(this._seconds);\n      this.secondsInputField.nativeElement.value = this._secondsAsString;\n    } else {\n      throw Error('Must not reach this part');\n    }\n  }\n  \n  private _setDefaultValues(): void {\n    this._minutes = 0;\n    this._seconds = 0;\n    this._secondsAsString = '00';\n    this._minutesAsString = '00';\n  }\n  \n  private _setInitialValues(value: number): void {\n    this._minutes = Math.floor(value / 60);\n    this._seconds = value % 60;\n    this._minutesAsString = this._minutes < 10 ? `0${this._minutes}` : String(this._minutes);\n    this.minutesInputField.nativeElement.value = this._minutesAsString;\n    this._secondsAsString = this._seconds < 10 ? `0${this._seconds}` : String(this._seconds);\n    this.secondsInputField.nativeElement.value = this._secondsAsString;\n  }\n  \n  public _onInputKeydown(event: KeyboardEvent): void {\n    if (event.which === this._spinKeys.upArrow || event.which === this._spinKeys.rightArrow) {\n      // increment\n      this._spin(event, 1);\n      event.preventDefault();\n    } else if (event.which === this._spinKeys.downArrow || event.which === this._spinKeys.leftArrow) {\n      // decrement\n      this._spin(event, -1);\n      event.preventDefault();\n    }\n  }\n  \n  public _onInputKeyPress(event: KeyboardEvent): void {\n    const inputChar = String.fromCharCode(event.charCode);\n    const notANumber = !this._keyPattern.test(inputChar);\n    const notAllowedKey = this._allowedKeys.indexOf(event.keyCode) === -1;\n    if (notANumber && notAllowedKey) {\n      event.preventDefault();\n    }\n  }\n  \n  public _onInputKeyup(event: KeyboardEvent): void {\n    const inputValue = (<HTMLInputElement> event.target).value;\n    this._setValue(inputValue);\n    this._formatValue();\n    \n    this.onModelChange((this._minutes * 60) + this._seconds);\n  }\n  \n  public _handleChange(event: KeyboardEvent): void {\n    this.onChange.emit(event);\n  }\n  \n  public _onInputFocus(event: KeyboardEvent, input: InputType): void {\n    this._currentInput = input;\n    this.onFocus.emit(event);\n  }\n  \n  public _onInputBlur(event: KeyboardEvent): void {\n    this.onModelTouched();\n    this.onBlur.emit(event);\n  }\n  \n  public _onButtonMousedown(event: Event, dir: number): void {\n    if (!this._disabled) {\n      this._highlightInput();\n      this._repeat(event, null, dir);\n    }\n  }\n  \n  public _onButtonMouseup(event: Event): void {\n    if (!this._disabled) {\n      this._clearTimer();\n    }\n  }\n  \n  public _onButtonMouseleave(event: Event): void {\n    if (!this._disabled) {\n      this._clearTimer();\n    }\n  }\n  \n  public setDisabledState(val: boolean): void {\n    this._disabled = val;\n  }\n  \n  public writeValue(value: number): void {\n    if (typeof value !== 'number') {\n      this._setDefaultValues();\n    } else {\n      this._setInitialValues(value);\n    }\n  }\n  \n  public registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n  \n  public registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'primeng/components/common/shared';\nimport { TimeSpinnerComponent } from \"./time-spinner.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n  ],\n  declarations: [TimeSpinnerComponent],\n  exports: [TimeSpinnerComponent],\n  \n})\nexport class TimeSpinnerModule {\n}","\nimport { Directive, HostListener, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Table } from 'primeng/table';\nimport { DomHandler } from 'primeng/api';\n\n@Directive({\n    selector: '[kpSortableColumn]',\n    host: {\n        '[class.ui-sortable-column]': 'isEnabled',\n        '[class.ui-state-highlight]': 'sorted'\n    }\n})\nexport class KPSortableColumn implements OnInit, OnDestroy {\n\n    @Input(\"kpSortableColumn\") field: string;\n\n    isEnabled: boolean;\n    sorted: boolean;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table) {\n        this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n            this.updateSortState();\n        });\n    }\n\n    ngOnInit() {\n        this.updateSortState();\n        this.isEnabled = !!this.field;\n    }\n\n    updateSortState() {\n        if (this.isEnabled) {\n            this.sorted = this.dt.isSorted(this.field);\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: MouseEvent) {\n        if (this.isEnabled) {\n            this.dt.sort({\n                originalEvent: event,\n                field: this.field\n            });\n\n          DomHandler.clearSelection();\n        }\n    }\n\n    ngOnDestroy() {\n        if(this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { KPSortableColumn } from './k-p-sortable-column';\n\n/**\n * @deprecated use separated module for each component\n */\n@NgModule({\n    imports: <any[]>[\n\n    ],\n    declarations: <any[]>[\n        KPSortableColumn\n    ],\n    exports: <any[]>[\n        KPSortableColumn\n    ],\n    providers: <any[]>[\n    ]\n})\nexport class KPTableModule {}\n","import {Component, ContentChild, Input, TemplateRef} from '@angular/core';\n\n@Component({\n  selector: 'k-column',\n  template: ''\n})\nexport class ColumnComponent {\n  @Input() field: string;\n  @Input() style: string;\n  @Input() header: string;\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\n}\n","import {\n  AfterContentInit, Component, ContentChildren, ElementRef, EventEmitter, Input, OnInit, Output,\n  QueryList, Renderer2, TemplateRef, ViewChild\n} from '@angular/core';\nimport {ColumnComponent} from './column.component';\nimport {Subscription} from 'rxjs/Subscription';\nimport \"rxjs/add/operator/delay\";\nimport {Observable} from \"rxjs/Observable\";\nimport 'rxjs/add/observable/fromEvent';\n\nconst sortingFunction = (a, b) => {\n  if (a === b)\n    return 0;\n  else if (a < b)\n    return -1;\n  else\n    return 1;\n};\n\nconst Events = {\n  MOUSE_UP: 'mouseup',\n  MOUSE_MOVE: 'mousemove',\n  MOUSE_DOWN: 'mousedown',\n  MOUSE_OVER: 'mouseover',\n  MOUSE_ENTER: 'mouseenter',\n  MOUSE_LEAVE: 'mouseleave'\n};\n\n@Component({\n  selector: 'k-draggable-data-table',\n  template: `<table [ngClass]=\"{ 'onDragMode' : !dragModeOff }\">\n  <thead>\n  <tr>\n    <th class=\"draggable-row-icon-placeholder\"></th>\n    <th *ngIf=\"selectable\" class=\"draggable-row-check-box\">\n      <p-checkbox (onChange)=\"selectAll($event)\"></p-checkbox>\n    </th>\n    <td *ngIf=\"showIndex\" class=\"draggable-row-index\"></td>\n    <th *ngFor=\"let col of columns\" [ngStyle]=\"col.style\">{{col.header}}</th>\n  </tr>\n  </thead>\n  <tbody #tableBody>\n\n  <tr *ngFor=\"let row of draggableItems;index as i;\" [class]=\"row.class\" [ngClass]=\"{ 'draggable-row' : true }\"\n      (mouseover)=\"onMouseOver($event, i)\" (mouseup)=\"onMouseUp()\">\n\n    <td class=\"draggable-row-icon-placeholder\" (mousedown)=\"onMouseDown($event, i)\">\n      <span class=\"draggable-row-icon\"></span>\n      <span class=\"draggable-row-icon\"></span>\n      <span class=\"draggable-row-icon\"></span>\n      <span class=\"draggable-row-icon\"></span>\n    </td>\n    <td *ngIf=\"selectable\" class=\"draggable-row-check-box\">\n      <p-checkbox [value]=\"getItemIndex(i)\" [(ngModel)]=\"selectedIndexes\" (onChange)=\"onSelectionChange()\">\n      </p-checkbox>\n    </td>\n    <td *ngIf=\"showIndex\" class=\"draggable-row-index\" (mousedown)=\"onMouseDown($event, i)\">\n      <span>{{getItemIndex(i) + 1}}</span>\n    </td>\n    <td *ngFor=\"let col of columns\" [ngStyle]=\"col.style\" (mousedown)=\"onMouseDown($event, i)\">\n      <ng-container\n        *ngTemplateOutlet=\"col.template; context: { $implicit: col, rowData: row, rowIndex: getItemIndex(i)}\"></ng-container>\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<div *ngIf=\"(!!draggableItems && draggableItems.length === 0) || !draggableItems\"\n     class=\"empty-state-placeholder\">\n  <ng-container *ngTemplateOutlet=\"emptyStateTemplate\"></ng-container>\n</div>\n\n<p-paginator *ngIf=\"paginator\" [rows]=\"rows\" [totalRecords]=\"value ? value.length : 0\"\n             [rowsPerPageOptions]=\"rowsPerPageOptions\" (onPageChange)=\"paginate($event)\">\n</p-paginator>\n\n<div #draggable [hidden]=\"dragModeOff\"\n     [ngClass]=\"{ 'multiple-drag-and-drop' : (multipleDragAndDrop && selectedIndexes.length > 1) }\"\n     (mouseup)=\"onMouseUp()\" (mousemove)=\"onMouseMove($event)\">\n  <span *ngIf=\"multipleDragAndDrop && selectedIndexes.length > 1\" class=\"selected-items-counter\">{{selectedIndexes.length}}</span>\n  <ng-container *ngTemplateOutlet=\"draggableViewTemplate; context: {currentDraggableItem: currentDraggableItem}\">\n  </ng-container>\n</div>\n`,\n  styles: [`table{width:100%;text-align:left;table-layout:fixed;border-collapse:collapse}table thead{border:1px solid #d9d9d9;border-left:none;border-right:none}table thead tr{height:32px;color:#999}table tbody{overflow:auto}table tbody tr{height:70px;background:#fff;color:#999}table tr{border:1px solid #d9d9d9;color:#333;border-left:none;border-right:none}.open{opacity:.5}.hovered{background-color:#ebebeb!important;text-indent:-9999px;border:none!important}.draggable-row-icon{display:none;width:4px;height:4px;border-radius:2px;background-color:#ccc;margin:4px 0 4px 7px}.draggable-row-check-box,.draggable-row-icon-placeholder,.draggable-row-index{width:15px}.draggable-row-check-box{width:44px}.draggable-row{cursor:-webkit-grab;cursor:grab}.onDragMode .draggable-row{cursor:-webkit-grabbing;cursor:grabbing}.draggable-row:hover .draggable-row-icon{display:block}.onDragMode .draggable-row:hover .draggable-row-icon{display:none}.fadeIn{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.multiple-drag-and-drop{box-shadow:5px 5px 0 0 #fff,7px 7px 8px 0 rgba(50,50,50,.38);border-radius:2px}.selected-items-counter{z-index:1;width:20px;height:20px;background:#00a784;display:block;border-radius:10px;color:#fff;text-align:center;position:absolute;top:-10px;right:-10px;font-size:small;line-height:150%;font-weight:700}.empty-state-placeholder{text-align:center}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}`]\n})\nexport class DraggableDataTableComponent implements AfterContentInit, OnInit {\n\n  @Input() emptyStateTemplate: TemplateRef<any>;\n\n  @Input() draggableViewTemplate: TemplateRef<any>;\n\n  @Output() valueChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n  @ViewChild('draggable') private draggableElement: ElementRef;\n\n  @ViewChild('tableBody') private tableBody: ElementRef;\n\n  @ContentChildren(ColumnComponent) cols: QueryList<ColumnComponent>;\n\n  currentDraggableItem: any;\n\n  draggable: any;\n\n  tableBodyElement: any;\n\n  columns: ColumnComponent[];\n\n  dragModeOff: boolean = true;\n\n  selectedIndexes: number[] = [];\n\n  mouseMoveSubscription: Subscription;\n\n  mouseMove: Observable<any>;\n\n  private _value: any[];\n\n  public draggableItems: any[];\n\n  public unDraggableItemsFromTop: any[];\n\n  public unDraggableItemsFromBottom: any[];\n\n  private _currentDraggedIndex: number;\n\n  private _currentPlaceHolderIndex: number = -1;\n\n  private _currentDraggedElement: EventTarget;\n\n  private _dropAvailable = false;\n\n  @Input() set value(val: any[]) {\n    if (val) {\n      this._value = [...val];\n      this._orderItems();\n    } else {\n      this._value = null;\n    }\n  }\n\n  get value(): any[] {\n    if (this.dragModeOff) {\n      return this._value;\n    }\n  }\n\n\n  @Input() unDraggableFromTop = 0;\n\n  @Input() unDraggableFromBottom = 0;\n\n  @Input() rowTrackBy: Function = (index: number, item: any) => item;\n\n  @Input() columnTrackBy: Function = (index: number, item: any) => item;\n\n  @Input() paginator: boolean = false;\n\n  @Input() rows: number;\n\n  @Input() rowsPerPageOptions: number[];\n\n  @Input() showIndex: boolean = false;\n\n  @Input() multipleDragAndDrop: boolean = false;\n\n  @Input() selectable: boolean = false;\n\n  @Output() selectionChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n  @Output() pageChange: EventEmitter<any> = new EventEmitter<any>();\n\n\n  constructor(private renderer: Renderer2) {\n  }\n\n  // component lifecycle events\n  ngOnInit(): void {\n    if(this.paginator) {\n      this.unDraggableFromBottom = this.rows;\n    }\n\n    this._orderItems();\n    this.draggable = this.draggableElement.nativeElement;\n    this.tableBodyElement = this.tableBody.nativeElement;\n    this.mouseMove = Observable.fromEvent(document, Events.MOUSE_MOVE).delay(50);\n\n    // cover non-permitted dragging/dropping:\n    Observable.fromEvent(document, Events.MOUSE_UP).subscribe(() => this.onMouseUp());\n    Observable.fromEvent(this.tableBody.nativeElement, Events.MOUSE_LEAVE).subscribe(() => this._onMouseLeave());\n    Observable.fromEvent(this.tableBody.nativeElement, Events.MOUSE_ENTER).subscribe(() => this._onMouseEnter());\n  }\n\n  ngAfterContentInit(): void {\n    this.columns = this.cols.toArray();\n  }\n\n  // public API methods\n  onMouseMove(event: MouseEvent) {\n    this._updateDraggable(event);\n  }\n\n  onMouseOver(event: any, index: number) {\n\n    // only for D&D mode:\n    if (!this.dragModeOff && index !== this._currentPlaceHolderIndex) {\n\n      // get mouse location to recognize where to add the placeholder (from top or bottom):\n      const middle: number = event.currentTarget.getBoundingClientRect().top + (event.currentTarget.getBoundingClientRect().height / 2);\n      const hoveredRow = Object.create(Object.getPrototypeOf(this.draggableItems[index]));\n      Object.assign(hoveredRow, this.draggableItems[index]);\n\n      // delete previous:\n      if (this._currentPlaceHolderIndex !== -1) {\n        this.draggableItems.splice(this._currentPlaceHolderIndex, 1);\n      }\n\n      // add placeholder from the bottom:\n      if (event.clientY > middle) {\n        this._currentPlaceHolderIndex = index + 1;\n        this.draggableItems.splice(this._currentPlaceHolderIndex, 0, hoveredRow);\n        this.draggableItems[this._currentPlaceHolderIndex].class = 'hovered';\n        this._updateView();\n      } else { // add placeholder from the top:\n        this._currentPlaceHolderIndex = index;\n        this.draggableItems.splice(this._currentPlaceHolderIndex, 0, hoveredRow);\n        this.draggableItems[this._currentPlaceHolderIndex].class = 'hovered';\n        this._updateView();\n      }\n    }\n  }\n\n  onMouseDown(event: MouseEvent, index: number): void {\n    // only left button mouse click\n    if (event.which === 1) {\n      if (this.multipleDragAndDrop) {\n\n        // sign draggable item as 'checked' if it's not:\n        const currentClickedIndex = this.getItemIndex(index);\n        if (this.selectedIndexes.indexOf(currentClickedIndex) === -1) {\n          this.selectedIndexes = [currentClickedIndex, ...this.selectedIndexes];\n        }\n\n        // edge-case when all items are selected - d&d should be disabled\n        if (this.selectedIndexes.length === this._value.length) {\n          return;\n        }\n\n        this.selectedIndexes.forEach(index => this._value[index].class = 'open');\n        this._value = [...this._value];\n      }\n\n      event.preventDefault();\n      this.currentDraggableItem = this.draggableItems[index];\n      this._updateDraggable(event);\n      this.dragModeOff = false;\n      this._currentDraggedIndex = index;\n      this._currentDraggedElement = event.currentTarget;\n      this._currentDraggedElement['classList'].add('open');\n      this.mouseMoveSubscription = this.mouseMove.subscribe((e: MouseEvent) => this.onMouseMove(e));\n      this.renderer.addClass(this.draggable, 'fadeIn');\n    }\n  }\n\n  onMouseUp(): void {\n    if (!this.dragModeOff) {\n      this.dragModeOff = true;\n      this._currentDraggedElement['classList'].remove('open');\n      this._value.forEach(item => delete item['class']);\n      this.mouseMoveSubscription.unsubscribe();\n      this.renderer.setStyle(document.body, 'cursor', 'default');\n\n      if (this._dropAvailable) {\n        if (this._currentPlaceHolderIndex !== -1) {\n          if (this.multipleDragAndDrop) {\n\n            // save item of this._currentPlaceHolderIndex - we'll need this item to find the entry-point:\n            let insertIndexReference = this.draggableItems[this._currentPlaceHolderIndex];\n\n            // save all dragged items aside:\n            const draggedItems: any[] = this.selectedIndexes.sort(sortingFunction).map<any>(index => this._value[index + ((index >= this._currentPlaceHolderIndex) ? 1 : 0)]);\n\n            // remove dragged (selected items) from the original data:\n            draggedItems.forEach(item => this._value.splice(this._value.indexOf(item), 1));\n\n            // insert draggable items back to the original data but with new order:\n            this._value.splice(this._value.indexOf(insertIndexReference), 1, ...draggedItems);\n\n            // initiate state:\n            this._currentPlaceHolderIndex = -1;\n            this.selectedIndexes = [];\n            this._orderItems();\n            this._updateView();\n            this.onSelectionChange();\n          }\n          else {\n            const buffer: number = (this._currentDraggedIndex >= this._currentPlaceHolderIndex) ? 1 : 0;\n            // insert dragged item to the new location:\n            this.draggableItems[this._currentPlaceHolderIndex] = this.draggableItems[this._currentDraggedIndex + buffer];\n\n            // remove dragged item previous location & update view:\n            this.draggableItems.splice(this._currentDraggedIndex + buffer, 1);\n\n            // initiate state:\n            this._currentPlaceHolderIndex = -1;\n            this._updateView();\n          }\n        }\n      } else {\n        // undroppable area - initiate state:\n        this.draggableItems.splice(this._currentPlaceHolderIndex, 1);\n        this._currentPlaceHolderIndex = -1;\n        this.selectedIndexes = [];\n        this.onSelectionChange();\n        this._updateView();\n      }\n    }\n  }\n\n  paginate(event: any) {\n    this.unDraggableFromTop = event.first;\n    this.unDraggableFromBottom = (event.first + event.rows);\n    this.value = [...this.unDraggableItemsFromTop, ...this.draggableItems, ...this.unDraggableItemsFromBottom];\n    this.pageChange.emit(event);\n  }\n\n  selectAll(event: any): void {\n    this.selectedIndexes = (event) ? [...Array.from(Array(this._value.length), (_,x) => x)] : [];\n    this.onSelectionChange();\n  }\n\n  onSelectionChange(): void {\n    this.selectionChange.emit(this.selectedIndexes.sort(sortingFunction).map(index => this._value[index]));\n  }\n\n  getItemIndex(index: number): number {\n    return this._value.indexOf(this.draggableItems[index]);\n  }\n\n  // private methods\n  private _updateView(): void {\n    this.value = (this.paginator) ? [...this.unDraggableItemsFromTop, ...this.draggableItems, ...this.unDraggableItemsFromBottom] : [...this.draggableItems];\n    if (this.dragModeOff) { this.valueChange.emit(this.value); }\n  }\n\n  private _updateDraggable(event: MouseEvent) {\n    this.renderer.setStyle(this.draggable, 'position', 'fixed');\n    this.renderer.setStyle(this.draggable, 'left', event.clientX + 20 + 'px');\n    this.renderer.setStyle(this.draggable, 'top', event.clientY - 35 + 'px');\n  }\n\n  private _onMouseLeave(): void {\n    this._dropAvailable = false;\n    if (!this.dragModeOff) {\n      this.renderer.setStyle(document.body, 'cursor', 'no-drop');\n    }\n  }\n\n  private _onMouseEnter(): void {\n    this._dropAvailable = true;\n  }\n\n  private _orderItems() {\n    if (!!this.value) {\n      if (this.paginator) {\n        // once using d&d with pagination page-size has to be increased by 1 because of the added placeholder\n        const buffer = (this._currentPlaceHolderIndex === -1) ? 0 : 1;\n\n        this.unDraggableItemsFromTop = [...this.value.slice(0, this.unDraggableFromTop)];\n        this.unDraggableItemsFromBottom = [...this.value.slice(this.unDraggableFromBottom + buffer)];\n        this.draggableItems = [...this.value.slice(this.unDraggableFromTop, this.unDraggableFromBottom + buffer)];\n      } else {\n        this.draggableItems = [...this.value];\n      }\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DraggableDataTableComponent} from \"./draggable-data-table.component\";\nimport {ColumnComponent} from \"./column.component\";\nimport {CheckboxModule} from 'primeng/primeng';\nimport {PaginatorModule} from \"primeng/primeng\";\n\n\n@NgModule(\n  {\n    imports: [\n      CommonModule,\n      CheckboxModule,\n      PaginatorModule\n    ],\n    declarations: [\n      DraggableDataTableComponent,\n      ColumnComponent\n    ],\n    exports: [\n      DraggableDataTableComponent,\n      ColumnComponent\n    ],\n    providers: []\n  }\n)\nexport class DraggableDataTableModule {\n\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Dropdown } from 'primeng/components/dropdown/dropdown';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { SelectItem } from 'primeng/components/common/selectitem';\n\nexport const DROPDOWN_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DropdownComponent),\n  multi: true\n};\n\n\n@Component({\n  selector: 'kDropdown',\n  template: `<div #container [ngClass]=\"{'ui-dropdown ui-widget ui-state-default ui-corner-all ui-helper-clearfix':true,\n            'ui-state-disabled':disabled,'ui-dropdown-open':overlayVisible,'ui-state-focus':focused, 'ui-dropdown-clearable': showClear && !disabled}\"\n     (click)=\"onMouseclick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n  <div class=\"ui-helper-hidden-accessible\" *ngIf=\"autoWidth\">\n    <select [required]=\"required\" [attr.name]=\"name\" [attr.aria-label]=\"selectedOption ? selectedOption.label : ' '\" tabindex=\"-1\" aria-hidden=\"true\">\n      <option *ngIf=\"placeholder\">{{placeholder}}</option>\n      <ng-container *ngIf=\"group\">\n        <optgroup *ngFor=\"let option of options\" [attr.label]=\"option.label\">\n          <option *ngFor=\"let option of option.items\" [value]=\"option.value\" [selected]=\"selectedOption == option\">{{option.label}}</option>\n          <optgroup>\n      </ng-container>\n      <ng-container *ngIf=\"!group\">\n        <option *ngFor=\"let option of options\" [value]=\"option.value\" [selected]=\"selectedOption == option\">{{option.label}}</option>\n      </ng-container>\n    </select>\n  </div>\n  <div class=\"ui-helper-hidden-accessible\">\n    <input #in [attr.id]=\"inputId\" type=\"text\" [attr.aria-label]=\"selectedOption ? selectedOption.label : ' '\" readonly (focus)=\"onInputFocus($event)\" role=\"listbox\"\n           (blur)=\"onInputBlur($event)\" (keydown)=\"onKeydown($event, true)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.autofocus]=\"autofocus\">\n  </div>\n  <label [ngClass]=\"{'ui-dropdown-label ui-inputtext ui-corner-all':true,'ui-dropdown-label-empty':(label == null || label.length === 0)}\" *ngIf=\"!editable && (label != null)\">\n    <ng-container *ngIf=\"!selectedItemTemplate\">{{label||'empty'}}</ng-container>\n    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: selectedOption}\"></ng-container>\n  </label>\n  <label [ngClass]=\"{'ui-dropdown-label ui-inputtext ui-corner-all ui-placeholder':true,'ui-dropdown-label-empty': (placeholder == null || placeholder.length === 0)}\" *ngIf=\"!editable && (label == null)\">{{placeholder||'empty'}}</label>\n  <input #editableInput type=\"text\" [attr.aria-label]=\"selectedOption ? selectedOption.label : ' '\" class=\"ui-dropdown-label ui-inputtext ui-corner-all\" *ngIf=\"editable\" [disabled]=\"disabled\" [attr.placeholder]=\"placeholder\"\n         (click)=\"onEditableInputClick($event)\" (input)=\"onEditableInputChange($event)\" (focus)=\"onEditableInputFocus($event)\" (blur)=\"onInputBlur($event)\">\n  <i class=\"ui-dropdown-clear-icon pi pi-times\" (click)=\"clear($event)\" *ngIf=\"value != null && showClear && !disabled\"></i>\n  <div class=\"ui-dropdown-trigger ui-state-default ui-corner-right\">\n    <span class=\"ui-dropdown-trigger-icon ui-clickable\" [ngClass]=\"dropdownIcon\"></span>\n  </div>\n  <div #panel [ngClass]=\"'ui-dropdown-panel ui-widget-content ui-corner-all ui-shadow'\" [@panelState]=\"overlayVisible ? 'visible' : 'hidden'\"\n       [style.display]=\"overlayVisible ? 'block' : 'none'\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n    <div *ngIf=\"filter\" class=\"ui-dropdown-filter-container\" (input)=\"onFilter($event)\" (click)=\"$event.stopPropagation()\">\n      <input #filter type=\"text\" autocomplete=\"off\" class=\"ui-dropdown-filter ui-inputtext ui-widget ui-state-default ui-corner-all\" [attr.placeholder]=\"filterPlaceholder\"\n             (keydown.enter)=\"$event.preventDefault()\" (keydown)=\"onKeydown($event, false)\">\n      <span class=\"ui-dropdown-filter-icon pi pi-search\"></span>\n    </div>\n    <div #itemswrapper class=\"ui-dropdown-items-wrapper\" [style.max-height]=\"scrollHeight||'auto'\">\n      <ul class=\"ui-dropdown-items ui-dropdown-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\">\n        <ng-container *ngIf=\"group\">\n          <ng-template ngFor let-optgroup [ngForOf]=\"optionsToDisplay\">\n            <li class=\"ui-dropdown-item-group\">\n              <span *ngIf=\"!groupTemplate\">{{optgroup.label||'empty'}}</span>\n              <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n            </li>\n            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: optgroup.items, selectedOption: selectedOption}\"></ng-container>\n          </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"!group\">\n          <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: optionsToDisplay, selectedOption: selectedOption}\"></ng-container>\n        </ng-container>\n        <ng-template #itemslist let-options let-selectedOption=\"selectedOption\">\n          <li *ngFor=\"let option of options;let i=index\"\n              [ngClass]=\"{\n                'ui-dropdown-item ui-corner-all':true,\n                'ui-state-highlight':(selectedOption == option),\n                'ui-dropdown-item-empty':!option.label||option.label.length === 0,\n                'ui-state-disabled': option.disabled\n              }\"\n              (click)=\"onItemClick($event, option)\">\n            <span *ngIf=\"!itemTemplate\">{{option.label||'empty'}}</span>\n            <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option}\"></ng-container>\n          </li>\n        </ng-template>\n        <li *ngIf=\"filter && optionsToDisplay && optionsToDisplay.length === 0\">{{emptyFilterMessage}}</li>\n      </ul>\n    </div>\n  </div>\n</div>\n`,\n  styles: [`.ui-dropdown{display:inline-block;position:relative;cursor:pointer;vertical-align:middle}.ui-dropdown .ui-dropdown-clear-icon{position:absolute;top:50%;font-size:.75em;height:1em;margin-top:-.5em;right:2.5em}.ui-dropdown .ui-dropdown-trigger{border-right:none;border-top:none;border-bottom:none;cursor:pointer;width:1.5em;height:100%;position:absolute;right:0;top:0;padding:0 .25em}.ui-dropdown .ui-dropdown-trigger .ui-dropdown-trigger-icon{top:50%;left:50%;margin-top:-.5em;margin-left:-.5em;position:absolute}.ui-dropdown .ui-dropdown-label{display:block;border:none;white-space:nowrap;overflow:hidden;font-weight:400;width:100%;padding-right:2.5em}.ui-dropdown-item-empty,.ui-dropdown-label-empty{text-indent:-9999px;overflow:hidden}.ui-state-disabled{opacity:.6;cursor:default}.ui-dropdown.ui-state-disabled .ui-dropdown-label,.ui-dropdown.ui-state-disabled .ui-dropdown-trigger{cursor:default}.ui-dropdown label.ui-dropdown-label{cursor:pointer}.ui-dropdown input.ui-dropdown-label{cursor:default}.ui-dropdown .ui-dropdown-panel{min-width:100%}.ui-dropdown-panel{position:absolute;height:auto;display:none}.ui-dropdown-panel .ui-dropdown-items-wrapper{overflow:auto}.ui-dropdown-panel .ui-dropdown-item{font-weight:400;border:0;cursor:pointer;margin:1px 0;padding:.125em .25em;text-align:left}.ui-dropdown-panel .ui-dropdown-item-group{font-weight:700;cursor:default}.ui-dropdown-panel .ui-dropdown-list{padding:.4em;border:0}.ui-dropdown-panel .ui-dropdown-filter{width:100%;box-sizing:border-box;padding-right:1.5em}.ui-dropdown-panel .ui-dropdown-filter-container{position:relative;margin:0;padding:.4em;display:inline-block;width:100%}.ui-dropdown-panel .ui-dropdown-filter-container .ui-dropdown-filter-icon{position:absolute;top:.8em;right:1em}.ui-fluid .ui-dropdown{width:100%}`],\n  animations: [\n    trigger('panelState', [\n      state('hidden', style({\n        opacity: 0\n      })),\n      state('visible', style({\n        opacity: 1\n      })),\n      transition('visible => hidden', animate('400ms ease-in')),\n      transition('hidden => visible', animate('400ms ease-out'))\n    ])\n  ],\n  host: {\n    '[class.ui-inputwrapper-filled]': 'filled',\n    '[class.ui-inputwrapper-focus]': 'focused'\n  },\n  providers: [DROPDOWN_VALUE_ACCESSOR]\n})\n\nexport class DropdownComponent extends Dropdown {\n  public onItemClick(event: MouseEvent, option: SelectItem): void {\n    if (!option['disabled']) {\n      super.onItemClick(event, option);\n    } else {\n      event.stopPropagation();\n    }\n  }\n\n  public selectItem(event: MouseEvent, option: SelectItem): void {\n    if (!option['disabled']) {\n      super.selectItem(event, option);\n    } else {\n      event.stopPropagation();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DropdownModule as PrimeDropdownModule } from 'primeng/primeng';\nimport { DropdownComponent } from './dropdown.component';\n\n@NgModule(\n  {\n    imports: [\n      CommonModule,\n      PrimeDropdownModule\n    ],\n    declarations: [\n      DropdownComponent\n    ],\n    exports: [\n      DropdownComponent\n    ],\n    providers: []\n  }\n)\nexport class DropdownModule {\n\n}\n"]}